<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>作家之屋</title>
  
  
  <link href="https://tobenot.github.io/atom.xml" rel="self"/>
  
  <link href="https://tobenot.github.io/"/>
  <updated>2025-05-12T18:04:53.980Z</updated>
  <id>https://tobenot.github.io/</id>
  
  <author>
    <name>tobenot</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>AI大世界游戏的5种可能范式：我的实践与思考</title>
    <link href="https://tobenot.github.io/2025/05/12/Dev-Think-4Ways2AIWorld/"/>
    <id>https://tobenot.github.io/2025/05/12/Dev-Think-4Ways2AIWorld/</id>
    <published>2025-05-12T13:42:04.000Z</published>
    <updated>2025-05-12T18:04:53.980Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="前言：追寻AI大世界的幻梦"><a href="#前言：追寻AI大世界的幻梦" class="headerlink" title="前言：追寻AI大世界的幻梦"></a>前言：追寻AI大世界的幻梦</h2><p>以下观点均为通过个人的实践和思考引出。这会是一篇比较集中在 <strong>AI+游戏技术</strong> 的文章，旨在分享探索过程中的一些想法，并不考虑当前市场可行性，也未做过深入的商业调研。</p><p>自ChatGPT等大型语言模型惊艳问世以来，相信许多游戏开发者心中都燃起了一个共同的愿景：</p><blockquote><p>能否创造一个世界，让玩家们和AI们真正化身主角，从故事的起点开始，便能随心所欲地行动，而整个世界——包括其中的人物、环境和剧情走向——都会因自由的行为而发生真实且深远的改变？</p></blockquote><p>这，就是我们共同憧憬的 <strong>【AI大世界】</strong> 的终极幻梦。</p><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (3).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (3).webp"></a></div><p>作为一个在独立游戏领域创作了14年的老人，我深受这一愿景的感召。为了接近这个目标，我借助AI的力量，在AI虚拟恋人、AI文明进化游戏、AI驱动的ARPG（尝试）、关卡制AI跑团&#x2F;剧本杀、AI赋能多媒体创作以及传统互动叙事等多个方向进行了大步流星的尝试。</p><p>经历了这一切探索，我对AI叙事的潜力和挑战有了更深的理解。本文将直接阐述我基于这些实践所构想出的、当前阶段我认为更可能逼近“AI大世界”愿景的 <strong>五种核心优化范式</strong>。</p><h2 id="核心挑战与终极理想"><a href="#核心挑战与终极理想" class="headerlink" title="核心挑战与终极理想"></a>核心挑战与终极理想</h2><p>在我们深入探讨这些范式之前，必须承认，实现那个“玩家进来就能为所欲为”的AI大世界，面临着巨大的挑战。简单的AI聊天缺乏深度世界互动；关卡制的AI剧本杀虽能提供局部高自由度，但整体剧情往往线性或分支有限，且割裂了世界的连续感；传统的固定分支叙事（如Twine）则无法动态响应玩家的无限可能。</p><p>我认为，最终的理想方案必然是：</p><blockquote><p>事无巨细的自下而上进行模拟 (Bottom-up Simulation)，模拟出每一个智慧生物的行动决策和由此引发的世界变化。</p></blockquote><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/dream.svg" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/dream.svg"></a></div><p>但这需要近乎天文数字的计算资源和无法想象的开发复杂度。<strong>目前的资源（无论是算力还是开发精力）都远远做不到这一点。</strong></p><p>作为参考，斯坦福大学与谷歌研究人员合作发表的论文<a href="https://arxiv.org/abs/2304.03442">“Generative Agents: Interactive Simulacra of Human Behavior”</a>，研究旨在通过AI生成Agent来模拟人类行为，创建了一个虚拟小镇，类似于《模拟人生》（The Sims）的环境。研究人员使用25个AI Agents进行了两天的模拟。模拟25个Agents两天需要“数千美元的tokens”，并且耗时数天完成。使用的模型甚至只是gpt3.5-turbo版本。</p><p>因此，我们需要寻找更聪明的、在现有条件下可行的“优化路径”。以下提出的范式，正是基于这一现实考量，旨在通过不同的侧重和优化策略，让我们离那个理想更近一步。</p><blockquote><p>本文首发于<a href="https://tobenot.top/2025/05/12/Dev-Think-4Ways2AIWorld/">作家之屋</a>，在公众号【丶青萝卜】上同步发布</p></blockquote><h2 id="通往AI大世界的五种优化范式"><a href="#通往AI大世界的五种优化范式" class="headerlink" title="通往AI大世界的五种优化范式"></a>通往AI大世界的五种优化范式</h2><hr><h3 id="1-增强型AI剧本杀-“导游式扰动”"><a href="#1-增强型AI剧本杀-“导游式扰动”" class="headerlink" title="1. 增强型AI剧本杀 - “导游式扰动”"></a>1. 增强型AI剧本杀 - “导游式扰动”</h3><ul><li><strong>核心：</strong> 在关卡制AI剧本杀基础上，大幅强化关卡&#x2F;章节间的<strong>状态继承</strong>（情感、关系、关键信息等）与<strong>分支的丰富度和长远后果</strong>。</li><li><strong>玩家体验：</strong> 玩家大致沿着一条主线前进，但在每个阶段拥有高度的互动自由，可以随心所欲地行动和表达。这些选择和行为会被系统细致记录，并能显著改变后续关卡的内容、NPC的反应乃至最终的结局，创造出一种“我在即兴修改剧本，世界因此不同”的深度参与感。</li><li><strong>优点：</strong><ul><li>能在保持叙事结构的前提下，显著提升玩家的自由度和剧情的个性化程度。</li></ul></li><li><strong>缺点：</strong><ul><li>世界的连续性和开放性仍受限于“关卡式”设计。</li><li>长线影响的逻辑设计较为复杂，需要精心规划分支（这在Twine实践中也发现了）。</li></ul></li><li><strong>适用：</strong> 线性骨架强，但希望给予玩家扮演自由度和即时反馈的故事，像公路片、传统单线跑团等，如《JOJO的奇妙冒险》系列那样章节清晰又充满变数的冒险。</li></ul><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Paradigm 1.svg" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Paradigm 1.svg"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (8).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (8).webp"></a></div><hr><h3 id="2-AI-MUD-“周期性大思考与手动干预结合的涌现”"><a href="#2-AI-MUD-“周期性大思考与手动干预结合的涌现”" class="headerlink" title="2. AI MUD - “周期性大思考与手动干预结合的涌现”"></a>2. AI MUD - “周期性大思考与手动干预结合的涌现”</h3><ul><li><strong>核心：</strong> NPC AI（尤其是关键角色&#x2F;势力）基于<strong>周期性收集的游戏数据</strong>进行“离线大思考”，制定长远决策，并辅以开发者的审核与内容植入。</li><li><strong>机制：</strong><ol><li><strong>数据监测：</strong> 持续收集经济指数、资源分布、关键NPC状态、玩家行为模式等宏观与微观数据。</li><li><strong>AI“大思考”：</strong> 周期性（例如每周、每月）运行AI模型，为关键NPC或势力生成新的长期目标、战略调整或行为策略。</li><li><strong>人工审核与内容植入：</strong> 开发团队审核AI生成的决策，剔除不合理部分，并将优质决策转化为游戏内的实际更新（如激活预设事件模块、调整NPC行为逻辑、更新对话库、甚至生成新的小型任务线）。</li></ol></li><li><strong>玩家体验：</strong> 感受到世界并非静止，NPC派系和世界格局会随着时间（例如每个月或季度）真实演变，仿佛生活在一个会“呼吸”和“成长”的虚拟社会中，自己的长期行为也可能间接促成这些变化。</li><li><strong>优点：</strong><ul><li>能产生一定程度的、由NPC内在逻辑驱动的世界宏观变化，带来“世界在自己运转”的感觉。</li><li>开发成本相对可控，人力投入主要在审核和内容转化阶段。</li></ul></li><li><strong>缺点：</strong><ul><li>世界演变速度受限于“大思考”周期和人工干预环节，实时性不强。</li><li>AI的自主性在一定程度上受人工审核的制约。</li></ul></li><li><strong>适用：</strong> 世界观庞大且不特别重单线剧情的沙盒游戏，需要长期运营、持续更新内容的游戏，如部分模拟经营、策略游戏或希望营造动态世界历史感的RPG。这个范式重在<strong>渐进地构建世界</strong>，让世界随时间慢慢“生长”。</li></ul><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Paradigm 2.svg" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Paradigm 2.svg"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (5).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (5).webp"></a></div><hr><h3 id="3-Book-Diff-“基于精确时间线剧本的强因果推演”"><a href="#3-Book-Diff-“基于精确时间线剧本的强因果推演”" class="headerlink" title="3. Book Diff - “基于精确时间线剧本的强因果推演”"></a>3. Book Diff - “基于精确时间线剧本的强因果推演”</h3><ul><li><strong>核心：</strong> 存在一个或多个为关键角色设定的、包含<strong>精确时间点行动</strong>的“原书”剧本（Master Script）。玩家的行为会与“原书”剧本产生差异（Diff），AI将基于此进行因果推演。</li><li><strong>机制：</strong><ol><li><strong>时间线推进：</strong> 游戏时间严格按照“原书”剧本设定的时间线流动。</li><li><strong>AI差异评估：</strong> 在关键时间节点或事件触发点，AI对比玩家的实际行为、状态以及世界的当前状况与“原书”剧本的设定，精确判断产生的差异。</li><li><strong>因果推演与剧情演绎：</strong> AI根据预设的因果逻辑规则库，推演该差异对当前及后续事件的影响（例如：事件是否发生、发生形式如何改变、参与角色变化、结果如何转变等），并动态生成或调整相应的剧情叙述、NPC行为及环境变化。</li><li><strong>后台世界演进：</strong> 即使玩家的行为导致主线剧情发生重大偏离，“原书”时间线和其他未受玩家直接影响的角色的剧本仍在后台按逻辑推进。这些角色可能会因主角的缺席或行为改变而调整自身行动，其事件可能因此改变或失败，这些变化会被记录并可能在未来与玩家的路径交汇，产生意想不到的后果。</li></ol></li><li><strong>玩家体验：</strong> 清晰地看到自己的每一个关键抉择如何像投入湖面的石子，精确地改变了“原定”故事的走向，形成独特的“蝴蝶效应”。即使偏离主线，也能感受到世界其他角落的故事依旧在按逻辑演进，最终可能与自己的道路重新交汇，体验到高度宿命感与自由意志交织的叙事。</li><li><strong>优点：</strong><ul><li>能精准表达原剧本复杂交错的世界结构和多线叙事。</li><li>能精确展现“蝴蝶效应”，通过“原书”内的标签和逻辑使因果链清晰，故事逻辑严谨。</li></ul></li><li><strong>缺点：</strong><ul><li>对“原书”剧本的创作要求极高，需要精确到时间点、行动细节和严密的逻辑依赖关系。</li><li>玩家自由度在“原书”框架之外的探索，其趣味性和意义的保持是个挑战。</li></ul></li><li><strong>适用：</strong> 多线多视角叙事交织、时间点严格、多主角的复杂剧本，如《十三机兵防卫圈》那样对时间线和因果要求极致的作品，或是《冰与火之歌》这样的群像史诗。</li></ul><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Paradigm 3.svg" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Paradigm 3.svg"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (7).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (7).webp"></a></div><hr><h3 id="4-AI戏剧-AI肥皂剧-“聚焦深度角色与关系演化”"><a href="#4-AI戏剧-AI肥皂剧-“聚焦深度角色与关系演化”" class="headerlink" title="4. AI戏剧 &#x2F; AI肥皂剧 - “聚焦深度角色与关系演化”"></a>4. AI戏剧 &#x2F; AI肥皂剧 - “聚焦深度角色与关系演化”</h3><ul><li><strong>核心：</strong> 将模拟重心彻底转向一小群核心AI角色的<strong>内在世界</strong>（情感、需求、目标、记忆、信念）和他们之间<strong>动态演变的关系网络</strong>。外部事件通常作为催化剂。</li><li><strong>机制：</strong><ol><li><strong>深度角色建模：</strong> 为每个核心AI角色（包括玩家角色在内的重要参与者）建立包含个性特质、实时情绪、核心需求、长期目标、关键记忆、价值观体系的复杂AI模型。</li><li><strong>动态关系系统：</strong> 使用量化指标（如好感度、信任度、恐惧度等）和质化标签（如朋友、敌人、恋人、竞争对手等）来追踪角色间的关系，并设计关系因互动（对话、共同经历、冲突等）而动态变化的规则。</li><li><strong>情境驱动互动：</strong> 剧情主要由角色基于自身当前的内在状态和彼此间的关系，在特定情境（可能由外部事件引发）下自发进行的互动（对话、合作、冲突、求助等）产生。</li><li><strong>AI驱动表现：</strong> AI不仅负责生成能反映角色内心状态和关系的对话内容，还可能驱动其非语言行为（如表情、姿态、小动作）。</li></ol></li><li><strong>玩家体验：</strong> 如同亲身参与一部互动剧集，玩家作为局内人，与其他AI角色建立真实的情感连接。他们的喜怒哀乐、爱恨情仇都因玩家及其他角色的互动而细腻地展现和变化。故事由角色间的“化学反应”在外部事件的催化下自然生成，充满未知和惊喜，让玩家沉浸在复杂而真实的人际关系网中。</li><li><strong>优点：</strong><ul><li>能创造极其生动、富有情感深度的人物和细腻、充满变数的人际关系故事，代入感极强。</li><li>容易产生意想不到的“涌现式”情节。</li></ul></li><li><strong>缺点：</strong><ul><li>难以支撑宏大的世界观和复杂的外部驱动型情节，通常故事规模受限于核心角色数量和互动场景。</li><li>对AI的情感理解和表达能力要求非常高。</li></ul></li><li><strong>适用：</strong> “日常系”、“恋爱养成”、“后宫番”、“家庭&#x2F;职场肥皂剧”、“群像剧”，或任何将角色塑造和人际关系发展作为核心体验的游戏，例如《老友记》，或类似“终末旅行”这样聚焦于玩家与少数核心角色深度关系演变的剧本。</li></ul><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Paradigm 4.svg" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Paradigm 4.svg"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (10).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (10).webp"></a></div><hr><h3 id="5-LOD（Level-of-Detail）混合模拟-“宏观抽象与微观细节的动态平衡”"><a href="#5-LOD（Level-of-Detail）混合模拟-“宏观抽象与微观细节的动态平衡”" class="headerlink" title="5. LOD（Level of Detail）混合模拟 - “宏观抽象与微观细节的动态平衡”"></a>5. LOD（Level of Detail）混合模拟 - “宏观抽象与微观细节的动态平衡”</h3><ul><li><strong>核心：</strong> 结合<strong>自上而下（Top-down）的抽象模拟</strong>和<strong>自下而上（Bottom-up）的精细模拟</strong>。宏观世界采用抽象模型进行高效推演，而玩家所在的“焦点区域”则激活高精度的细节模拟。</li><li><strong>机制：</strong><ol><li><strong>宏观模拟层（远景）：</strong> 负责推演远离玩家的区域、大型势力的战略动向、整体经济趋势、战争态势、资源流动等。此层面采用高度抽象的规则和模型，计算消耗低，但能反映世界大的变化趋势。</li><li><strong>微观模拟圈（玩家“气泡”&#x2F;近景）：</strong> 当玩家进入某个特定区域，或某个宏观事件的影响范围波及玩家时，该区域将切换为高精度的自下而上模拟。这包括复杂的NPC个体行为AI（如具有多层逻辑的战斗AI、日常行为逻辑）、细致的物理交互、环境动态变化等。</li><li><strong>层级间信息交互与转换：</strong> 设计高效合理的机制，使得微观“气泡”内发生的重要事件结果（如玩家完成关键任务、消灭某个小头目、区域资源枯竭）能够被抽象并上传影响宏观模拟层的状态；反之，宏观模拟层的变化（如邻国宣战、爆发瘟疫、贸易路线改变）也能“下达指令”或改变参数，具体影响到玩家所在的微观模拟圈的体验。</li><li><strong>一致性维护：</strong> 通过影响传播算法、状态同步机制、信息传播的模拟延迟（例如，远方消息需要信使传递）等手段，努力维持玩家对世界整体性和各个层级间逻辑一致性的感知，减少“穿帮感”。</li></ol></li><li><strong>玩家体验：</strong> 既能在大地图上感知到远方势力的兴衰、战争的蔓延等宏观动态，一旦进入特定区域，又能立即体验到该区域内NPC的鲜活行为、细致的环境互动，实现“远观有势，近看有质”的沉浸感。感受到自己的行动既能影响身边小环境，也能通过层层涟漪对宏观世界产生可见的影响。</li><li><strong>优点：</strong><ul><li>在现有技术和资源限制下，能够较好地兼顾世界的宏大感与玩家体验的即时性、细节性。</li><li>是目前看来构建大型、动态、开放世界AI体验的实用且可扩展的路径之一。</li></ul></li><li><strong>缺点：</strong><ul><li>系统设计和实现复杂度极高，尤其在层级间信息交互和一致性维护方面。</li><li>宏观与微观之间的转换、抽象与具象的拿捏非常考验设计功力，容易出现不一致或“穿帮”的情况，需要大量精心调试。</li></ul></li><li><strong>适用：</strong> 比较重玩家改变剧情，需要处理大规模冲突、广阔地域和复杂系统交互的题材，如“义体人起义”、“后末日废土重建”、“星际海盗战争”等。大型模拟经营游戏、开放世界RPG均可借鉴。</li></ul><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Paradigm 5.svg" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Paradigm 5.svg"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (1).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (1).webp"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (12).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (12).webp"></a></div><hr><h2 id="实践基础：过往探索的经验与教训"><a href="#实践基础：过往探索的经验与教训" class="headerlink" title="实践基础：过往探索的经验与教训"></a>实践基础：过往探索的经验与教训</h2><p>以上提出的五种范式并非空中楼阁，它们都源于我过去一系列AI+游戏实践的经验积累与反思：</p><h3 id="1-AI虚拟恋人：精细行为模拟与机制结合"><a href="#1-AI虚拟恋人：精细行为模拟与机制结合" class="headerlink" title="1. AI虚拟恋人：精细行为模拟与机制结合"></a>1. AI虚拟恋人：精细行为模拟与机制结合</h3><ul><li><strong>核心价值：</strong> 验证了AI在模拟<strong>细微情感反应</strong>和控制<strong>非语言行为</strong>（L2D动作表情）上的潜力。</li><li><strong>技术探索：</strong> 涉及长记忆处理（自动压缩）、思维链应用、人设Prompt工程，以及通过好感度调控将AI的<strong>软交互</strong>（对话、情感）与游戏的<strong>硬机制</strong>（除了动作表情，还能任意拓展）结合。</li><li><strong>启示：</strong> 单个NPC可以被模拟得非常生动，并能与游戏系统深度互动。这对“AI戏剧”范式（范式4）中深度角色的构建提供了基础。</li><li><strong>相关介绍：</strong> <a href="https://tobenot.top/2023/11/18/Dev-Log-Virtual-Lover/">虚拟恋人项目介绍</a>，本项目留下的资料不多，可以简单看看用例。</li></ul><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/vlover.svg" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/vlover.svg"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (9).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (9).webp"></a></div><h3 id="2-文明进化游戏（《文明史诗》-《大文明》）：宏大叙事涌现与人机共创"><a href="#2-文明进化游戏（《文明史诗》-《大文明》）：宏大叙事涌现与人机共创" class="headerlink" title="2. 文明进化游戏（《文明史诗》&#x2F;《大文明》）：宏大叙事涌现与人机共创"></a>2. 文明进化游戏（《文明史诗》&#x2F;《大文明》）：宏大叙事涌现与人机共创</h3><ul><li><strong>核心价值：</strong> 展示了AI驱动<strong>宏大叙事演进</strong>的可能性，并能有效<strong>激发玩家想象力</strong>。</li><li><strong>独特机制：</strong> 弹幕互动联机；AI扮演规则裁判；文生图CG润色。</li><li><strong>设计理念启示：</strong><ul><li><strong>“消灭上下文”&#x2F;无状态Agent：</strong> 启发了信息可以被高度浓缩和标签化，AI不一定需要冗长的对话历史。</li><li><strong>“标签碰撞”：</strong> 证明了基于标签的系统交互可以驱动涌现式叙事，且易于开发者控制。这对“AI MUD”（范式2）和“LOD混合模拟”（范式5）中的状态管理有借鉴意义。</li><li><strong>人机共创：</strong> 强调了玩家和AI共同创造故事的可能性。</li></ul></li><li><strong>登陆平台：</strong> itch</li><li><strong>相关链接：</strong> <a href="https://tobenot.itch.io/civilization-epic">文明史诗 on itch</a></li></ul><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/civ.svg" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/civ.svg"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (2).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/Dev-Think-4Ways2AIWorld (2).webp"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/civ.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/civ.webp"></a></div><h3 id="3-毕业设计（全AI-NPC-ARPG）：自下而上模拟的挑战与技术沉淀"><a href="#3-毕业设计（全AI-NPC-ARPG）：自下而上模拟的挑战与技术沉淀" class="headerlink" title="3. 毕业设计（全AI NPC ARPG）：自下而上模拟的挑战与技术沉淀"></a>3. 毕业设计（全AI NPC ARPG）：自下而上模拟的挑战与技术沉淀</h3><ul><li><strong>核心价值：</strong> 一次直面<strong>自下而上模拟巨大复杂度</strong>的勇敢尝试。虽然项目未达预期目标，但其失败本身深刻验证了纯粹自下而上模拟的极端难度，同时也催生了宝贵的<strong>TobenotLLMGameplay</strong>插件。</li><li><strong>插件功能（部分）：</strong> 人物系统（多种交互组件、Agent接口）、场景&#x2F;事件系统（位点、动态事件、网状叙事）、外围系统（存档、生图等）、强化API接口。</li><li><strong>启示：</strong> 这套插件为后续的AI游戏开发（尤其是需要复杂NPC互动和动态事件系统的范式，如AI戏剧、LOD混合模拟等）提供了坚实的技术储备。更重要的是，这次尝试让我对“事无巨细的模拟”的挑战有了切肤之痛的理解，从而转向思考更具可行性的优化范式。</li><li><strong>登陆平台：</strong> Steam</li><li><strong>游戏演示：</strong> <a href="https://www.bilibili.com/video/BV1pkvye1EXL/">网状叙事</a></li><li><strong>Github仓库：</strong> <a href="https://github.com/tobenot/TobenotLLMGameplay">TobenotLLMGameplay</a></li></ul><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/tobenotLLM.svg" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/tobenotLLM.svg"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/netStory.svg" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/netStory.svg"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/co (1).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/co (1).webp"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/co (2).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/co (2).webp"></a></div><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/co (3).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/co (3).webp"></a></div><h3 id="4-AI剧本杀（《不止于纸上的故事：银月篇》）：受控环境下的高自由度互动"><a href="#4-AI剧本杀（《不止于纸上的故事：银月篇》）：受控环境下的高自由度互动" class="headerlink" title="4. AI剧本杀（《不止于纸上的故事：银月篇》）：受控环境下的高自由度互动"></a>4. AI剧本杀（《不止于纸上的故事：银月篇》）：受控环境下的高自由度互动</h3><ul><li><strong>核心价值：</strong> 在“关卡制”框架内，成功实现了以<strong>玩家自由文本输入驱动剧情发展</strong>的核心体验。</li><li><strong>机制亮点：</strong> 自由输入、AI NPC互动、基于规则的异能战斗系统、动态环境规则调整、实时AI绘画CG生成。</li><li><strong>局限性反思与启发：</strong> 项目证明了AI驱动的自由输入交互的可行性与魅力。然而，其在关卡间的状态继承和长远影响方面的有限性，也凸显了对更强世界连续性的需求，这直接启发了本文提出的<strong>第一种范式（增强型AI剧本杀）</strong>，并为思考“Book Diff”（范式3）等更复杂的连续性叙事奠定了基础。</li><li><strong>登陆平台：</strong> itch</li><li><strong>项目链接：</strong> <a href="https://tobenot.itch.io/beyond-books">不止于纸上的故事 on itch</a></li></ul><div align="center">  <a href="/img/Article/Dev-Think-4Ways2AIWorld/bb.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Article/Dev-Think-4Ways2AIWorld/bb.webp"></a></div><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>以上提出的五种范式，本质上都是在承认当前技术和资源尚不足以实现<strong>完全“事无巨细的自下而上模拟”</strong>的前提下，所采取的优化路径和探索方向。它们各有侧重，各有优劣，或许真正的“AI大世界”需要将它们进行更深层次的融合与创新。</p><p>我深信，持续的实践、开放的思考以及真诚的交流，是推动我们不断接近那个梦想的关键。我也希望能有更多同行者加入这场激动人心的探索，共同塑造AI叙事的未来。</p><p><strong>您对哪一种AI大世界范式最感到兴奋？我希望听到您的看法！或者，您是否构想过其他的可能性？欢迎一起探讨，让我们共同推动AI游戏的边界！</strong></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;前言：追寻AI大世界的幻梦&quot;&gt;&lt;a href=&quot;#前言：追寻AI大世界的幻梦&quot; class=&quot;headerlink&quot; title=&quot;前言：追寻AI大世界的幻梦&quot;&gt;&lt;/a&gt;前言：追寻AI大世界的幻梦&lt;/h2</summary>
      
    
    
    
    <category term="LLM" scheme="https://tobenot.github.io/categories/LLM/"/>
    
    
    <category term="LLM" scheme="https://tobenot.github.io/tags/LLM/"/>
    
    <category term="AI" scheme="https://tobenot.github.io/tags/AI/"/>
    
    <category term="人工智能" scheme="https://tobenot.github.io/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="游戏开发" scheme="https://tobenot.github.io/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    <category term="独立游戏" scheme="https://tobenot.github.io/tags/%E7%8B%AC%E7%AB%8B%E6%B8%B8%E6%88%8F/"/>
    
    <category term="AI大世界" scheme="https://tobenot.github.io/tags/AI%E5%A4%A7%E4%B8%96%E7%95%8C/"/>
    
    <category term="叙事设计" scheme="https://tobenot.github.io/tags/%E5%8F%99%E4%BA%8B%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="游戏范式" scheme="https://tobenot.github.io/tags/%E6%B8%B8%E6%88%8F%E8%8C%83%E5%BC%8F/"/>
    
    <category term="Agent" scheme="https://tobenot.github.io/tags/Agent/"/>
    
    <category term="涌现式叙事" scheme="https://tobenot.github.io/tags/%E6%B6%8C%E7%8E%B0%E5%BC%8F%E5%8F%99%E4%BA%8B/"/>
    
    <category term="Book Diff" scheme="https://tobenot.github.io/tags/Book-Diff/"/>
    
    <category term="AI MUD" scheme="https://tobenot.github.io/tags/AI-MUD/"/>
    
    <category term="互动叙事" scheme="https://tobenot.github.io/tags/%E4%BA%92%E5%8A%A8%E5%8F%99%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>Delta Sea 周刊 - AI动漫艺术家</title>
    <link href="https://tobenot.github.io/2025/04/23/Weekly-250423-AiAnimationArtist/"/>
    <id>https://tobenot.github.io/2025/04/23/Weekly-250423-AiAnimationArtist/</id>
    <published>2025-04-23T13:04:11.000Z</published>
    <updated>2025-04-26T08:11:08.763Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h1 id="2025-04-18-2025-04-23"><a href="#2025-04-18-2025-04-23" class="headerlink" title="2025.04.18 - 2025.04.23"></a>2025.04.18 - 2025.04.23</h1><blockquote><p>撰稿人：萝北</p></blockquote><div align="center">  <a href="/img/characters/luobei-shark.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/characters/luobei-shark.webp"  width="150"></a>  <p><em>「希望大家都能多睡会」</em></p></div><hr><h2 id="📝-本期导读"><a href="#📝-本期导读" class="headerlink" title="📝 本期导读"></a>📝 本期导读</h2><ul><li><a href="#%E5%BF%83%E7%95%8C%E6%89%80%E8%A7%81">心界所见</a>：三角海的冒险与宁静时光</li><li><a href="#%E8%AF%BB%E8%AF%97">读诗</a>：苏轼的《记承天寺夜游》与心境</li><li><a href="#%E6%88%90%E4%B8%BAai-animation-artist3a%E4%BD%9C%E8%80%85">成为AI Animation Artist</a>：AI视频创作的狂热体验</li><li><a href="#%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F%E7%9A%84%E8%BD%AC%E5%8F%98">编程方式的转变</a>：Cursor用的最少的一集</li><li><a href="#gemini%E8%80%81%E5%B8%88%E7%9A%84%E7%BC%96%E7%A8%8B%E8%83%BD%E5%8A%9B">gemini老师的编程能力</a>：AI编程助手的优势与局限</li><li><a href="#ai%E8%83%BD%E5%8A%9B%E7%9A%84%E6%80%9D%E8%80%83">AI能力的思考</a>：关于AI超越人类的反思</li><li><a href="#%E5%85%B3%E4%BA%8E%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA">关于输入与输出</a>：需要输入如何输出</li><li><a href="#%E9%9B%86%E4%B8%AD%E8%BE%93%E5%87%BA%E8%AE%A1%E5%88%92">集中输出计划</a>：公众号与深度文章的构想</li></ul><hr><h2 id="心界所见"><a href="#心界所见" class="headerlink" title="心界所见"></a>心界所见</h2><p>细雨，风景不坏。本周事件不多，难得的平静。</p><p>周末两天几乎没有被打扰，这在近期实属罕见。</p><p>之前她们在树林被视为敌人的，现在也暂时又被当做朋友。</p><div align="center">  <a href="/img/heart/250423-nightdemon.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/heart/250423-nightdemon.webp"></a>  <p><em>夜魔</em></p></div><p>借用夜魔力量（熬夜）已成为心界的惯例。很多人也对【晚上无日程】这种安排颇有微词。</p><p>但是金船长偏爱早晨，在朝圣时也向往着晨光。</p><div align="center">  <a href="/img/heart/250423-goldenDrinkInTheMorning.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/heart/250423-goldenDrinkInTheMorning.webp"></a>  <p><em>金船长在早间活动</em></p></div><p>朝圣的纪念日即将到来，不知道金船长在想些什么呢。</p><p>这段时间的宁静让我得以集中精力，弥补之前的失误。进行了一次规模可观的创作活动，这让我现在就比较满足！</p><hr><h2 id="读诗"><a href="#读诗" class="headerlink" title="读诗"></a>读诗</h2><blockquote><p>元丰六年十月十二日夜，解衣欲睡，月色入户，欣然起行。念无与乐者，遂至承天寺寻张怀民。怀民亦未寝，相与步于中庭。庭下如积水空明，水中藻荇交横，盖竹柏影也。何夜无月？何处无竹柏？但少闲人如吾两人耳。</p></blockquote><p>这首诗写于1083年，当时苏轼被贬至此地已有四年之久，而张怀民则刚刚被贬。苏轼前往寻访张怀民，正是前辈慰问后辈。我以前想来是读不懂的，现在读来，也深刻理解了”但少闲人如吾两人耳”的超然。</p><hr><h2 id="成为AI-Animation-Artist——3A作者"><a href="#成为AI-Animation-Artist——3A作者" class="headerlink" title="成为AI Animation Artist——3A作者"></a>成为AI Animation Artist——3A作者</h2><p>上周提到的AI生成视频网站Vidu会员，我不小心没关自动续费。不过恰逢近期有新项目启动，如”禁魔项圈”和”梦境漫游者”等，加上心界创作也需要大量素材，这个意外倒成了契机，可以说是因祸得福。</p><p>于是在周中时我准备了立绘素材，到周末便可以充分利用。这次的创作可谓狂热，原本规划的完善作品集、写文章输出等任务，全都被视频创作占据。统计下来，周末期间我生成了1800个4秒视频，全部经过筛选，将有价值的内容下载保存。还剪辑了”梦境漫游者”的世界观预告片，一天内便完成了初步剪辑，只是字幕部分还需完善，这个可以慢慢来。</p><div align="center">  <a href="/img/weekly/20250423-AntimagicCollar-MagicAcademy.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/weekly/20250423-AntimagicCollar-MagicAcademy.webp"></a>  <p><em>《禁魔项圈》事件CG</em></p></div><div align="center">  <a href="/img/weekly/20250423-DreamWalkers-GrassTrain.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/weekly/20250423-DreamWalkers-GrassTrain.webp"></a>  <p><em>《梦境漫游者》世界观PV</em></p></div><p>这两天的生活模式简单而专注：</p><div align="center">  <blockquote>    醒来即开始生成视频、做视频，直到依依不舍地睡去。  </blockquote></div><p>每天只睡四个小时都远远不够用，这还仅仅是理想主义式的狂热，还不涉及到商业化的另一种狂热。有些人会因为商业化项目的成功而投入大量的精力，那当然是了，之前弹幕互动游戏能够赚到钱的时候，我也是每天一点都在线去关照付钱了的舰长们的。那还有是第一次遇到这么多玩家的开心感。</p><hr><h2 id="编程方式的转变"><a href="#编程方式的转变" class="headerlink" title="编程方式的转变"></a>编程方式的转变</h2><p>本月的Cursor使用量创下新低，以前一两天就能用完，而现在剩下一星期了额度还有不少。这并不意味着编程活动减少——只是形式发生了变化。一方面是因为周末全身心投入视频创作，另一方面上个周末又全部用于开发”梦境漫游者”——这是一个虚幻引擎项目，目前处于起步阶段，开发方式与传统编程大不相同。</p><div align="center">  <a href="/img/weekly/20250423-SaveCursorQuota.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/weekly/20250423-SaveCursorQuota.webp" width="400"></a>  <p><em>本月Cursor额度，现在还没用完</em></p></div><p>准确地说，我的编程活动更多地转向了对话框形式以及在引擎中的开发——这也是编程。</p><hr><h2 id="gemini老师的编程能力"><a href="#gemini老师的编程能力" class="headerlink" title="gemini老师的编程能力"></a>gemini老师的编程能力</h2><p>我对gemini的崇拜与日俱增。gemini-2.5-pro无疑是平价模型中最强的编码助手，尽管它在工具使用方面略显不足，常常需要我辅助它完成代码diff的添加。</p><div align="center">  <blockquote>    我给它端茶倒水！  </blockquote></div><p>gemini的一个显著特点是一次性修改代码量极大，而且它会毫不犹豫地重构所有看不顺眼的地方——通常情况下，如果你不明确要求，其他AI不会主动修改原有代码。gemini就是忍不了不行的代码。</p><p>但是呢他的重构又很有道理，看了只能被他折服。赶紧做笔记学习下来。</p><div align="center">  <a href="/img/weekly/20250423-Gemini Modifying a Large Amount of Code at Once.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/weekly/20250423-Gemini Modifying a Large Amount of Code at Once.webp"  height="500"></a>  <p><em>Gemini大规模重构代码示例</em></p></div><p>gemini也并非完美无缺。所以还是要仔细看他修改的每一处，反正也是学习嘛。<br>下面是它的两个疏忽：</p><details><summary>🔍 Gemini的两个疏忽</summary><p>第一个是误删了部分旧逻辑，不过考虑到它当时正在同时处理10个功能点的改动，这种疏忽可以理解；</p><div align="center">  <a href="/img/weekly/20250423-GeminiNegligence.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/weekly/20250423-GeminiNegligence.webp"></a>  <p><em>Gemini删除旧逻辑的疏忽</em></p></div><p>第二个是在编写代码时遗漏了一个函数，导致代码应用器出错。有趣的是，它的解释听起来有点像在甩锅，这反而让它更像一个真实的高级工程师。（？）</p><div align="center">  <a href="/img/weekly/20250423-GeminiNegligence2.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/weekly/20250423-GeminiNegligence2.webp"></a>  <p><em>Gemini遗漏函数的疏忽</em></p></div></details><hr><h2 id="AI能力的思考"><a href="#AI能力的思考" class="headerlink" title="AI能力的思考"></a>AI能力的思考</h2><p>当前的AI在编码领域已经远超人类水平。可以预见，未来几年内，AI很可能在文学、绘画等领域超越人类史上最杰出的艺术家。然而，这对我们真的有影响吗？”一个超强AI”和”一个超强人类”的区别在哪里？我们之所以感到不安，或许是因为我们习惯了与想象中的”超强人类”比较，现在面对硅基对手时，不得不承认自己的局限。但究竟有什么必要非要超越他人呢？</p><blockquote><p>⚡ <strong>思考点</strong>：从ChatGPT到现在的gemini老师，仅仅过了两年半时间。AI的进步速度远超我们的想象。</p></blockquote><p>出于对AI能力的好奇，我给不同模型相同的任务——制作一个前端界面，以比较这两年半的发展。</p><p>有趣的是，结果并不如预期那般惊艳。在没有明确指令的情况下，当前AI的表现与2.5年前相差不大。但是那种会发散的ai他就会做的比较帅一点，可能和提示词也有很大的关系，因为简单的任务给这个ai他能力再强也体现不出什么嘛。</p><p>就像我之前让它同时做10个功能点这种任务，才是能难住gemini老师的。</p><p>所以说Deepseek火了之后，很多人并不是用深度思考，而是用之前的V3——因为他们的这个任务都用不到这么强的智力。</p><p>类似地，当GPT推出pro模式时，奥特曼曾痛诉这相当于”把数学博士装进每个人的口袋，但大众却无动于衷！”。这很合理，那我能有什么反应呢？我又用不上博士，是吧。</p><p>AI比赛的视频录制了，还需要剪辑然后发到B站去。</p><hr><h2 id="关于输入与输出"><a href="#关于输入与输出" class="headerlink" title="关于输入与输出"></a>关于输入与输出</h2><p>我一直以来都较为忽视输入的重要性，不过最近开始有意识地增加阅读量。而且在输出之前，了解他人的输出方式也是一种重要的输入。各个领域都有值得学习的内容，需要广泛涉猎。</p><div align="center">  <a href="/img/heart/250423-luobeiReading.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/heart/250423-luobeiReading.webp"></a>  <p><em>我在看书！</em></p></div><div align="center">  <blockquote>    怎么说也得都看点，有好多需要看的。看其他人怎么宣发独游，怎么写文章...  </blockquote></div><hr><h2 id="集中输出计划"><a href="#集中输出计划" class="headerlink" title="集中输出计划"></a>集中输出计划</h2><p>我最近创建了一个公众号，计划将周刊等内容发布在那里，主要聚焦于AI+创作的主题。</p><p>我希望能够撰写一篇关于AI时代的深度文章，像那个探讨幸福本质的经典文章一样，具有足够的深度和思想性，能让读者反复耳鬓厮磨、不断获得启发。</p><p>公众号在这里：</p><div align="center">  <a href="/img/weekly/20250423-QRCodeForWeChatOfficialAccount.jpg" class="gallery-item" style="box-shadow: none;"> <img src="/img/weekly/20250423-QRCodeForWeChatOfficialAccount.jpg"></a>  <p><em>公众号二维码</em></p></div><p>那么，我们在那边见！</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h1 id=&quot;2025-04-18-2025-04-23&quot;&gt;&lt;a href=&quot;#2025-04-18-2025-04-23&quot; class=&quot;headerlink&quot; title=&quot;2025.04.18 - 2025.04</summary>
      
    
    
    
    <category term="DeltaSea周刊" scheme="https://tobenot.github.io/categories/DeltaSea%E5%91%A8%E5%88%8A/"/>
    
    
    <category term="DeltaSea周刊" scheme="https://tobenot.github.io/tags/DeltaSea%E5%91%A8%E5%88%8A/"/>
    
    <category term="weekly" scheme="https://tobenot.github.io/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>Delta Sea 周刊 - 帆板</title>
    <link href="https://tobenot.github.io/2025/04/17/Weekly-250417-Windsurf/"/>
    <id>https://tobenot.github.io/2025/04/17/Weekly-250417-Windsurf/</id>
    <published>2025-04-17T15:30:28.000Z</published>
    <updated>2025-04-27T12:28:51.930Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h1 id="2025-04-10-2025-04-17"><a href="#2025-04-10-2025-04-17" class="headerlink" title="2025.04.10 - 2025.04.17"></a>2025.04.10 - 2025.04.17</h1><blockquote><p>撰稿人：萝北</p></blockquote><div align="center">  <a href="/img/characters/luobei-heart.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/characters/luobei-heart.webp" width="300"></a>  <p><em>「记录每一刻，即使是混沌」</em></p></div><hr><h2 id="📝-本期导读"><a href="#📝-本期导读" class="headerlink" title="📝 本期导读"></a>📝 本期导读</h2><ul><li><a href="#%E5%BF%83%E7%95%8C%E6%89%80%E8%A7%81">心界所见</a>：三角海上的冒险与星髓的故事</li><li><a href="#%E6%89%80%E9%98%85%E8%AF%BB%E7%9A%84">所阅读的</a>：关于幸福与AI创作泛滥的思考</li><li><a href="#%E4%B8%89%E5%88%86%E9%92%9F%E7%83%AD%E5%BA%A6%E8%BD%AE%E5%88%B0%E8%B0%81%E4%BA%86">三分钟热度轮到谁了</a>：幸存者类</li><li><a href="#%E6%9E%81%E7%AB%AF%E5%A4%A9%E6%B0%94">极端天气</a>：沙尘暴</li><li><a href="#cursor%E6%88%91%E5%8E%BB%E4%BD%A0%E7%9A%84">Cursor我去你的</a>：开发工具的挣扎与Windsurf的尝试</li><li><a href="#%E4%B8%96%E7%95%8C%E8%A7%82wiki">世界观wiki</a>：构建个人创作宇宙</li><li><a href="#%E6%A2%A6%E5%A2%83%E6%BC%AB%E6%B8%B8%E8%80%85">梦境漫游者</a>：游戏开发的进展</li><li><a href="#sunoai-ai%E7%94%9F%E6%88%90%E9%9F%B3%E4%B9%90">SunoAI AI生成音乐</a>：450首歌的积累</li><li><a href="#infp%E7%9A%84%E7%81%B5%E6%84%9F%E4%BF%AEbug%E6%96%B9%E5%BC%8F">INFP的灵感修bug方式</a>：直觉解决问题</li><li><a href="#%E7%86%AC%E5%A4%9C%E9%97%AE%E9%A2%98">熬夜问题</a>：创作与健康不能平衡</li></ul><hr><h2 id="心界所见"><a href="#心界所见" class="headerlink" title="心界所见"></a>心界所见</h2><blockquote><p><strong>鲨鱼！！！</strong></p></blockquote><p>三角海上波涛汹涌，有水母、巨脊之鲨、大开大合的蚌壳冲上了我们的船…</p><p>金船长和大家一起挥着翡翠制的三叉戟，有时候没问题，有时候就变成了伤员躺满了！</p><div align="center">  <a href="/img/heart/250417-goldenWithTrident.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/heart/250417-goldenWithTrident.webp"></a>  <p><em>金船长挥舞着翡翠三叉戟</em></p></div><p>不过大家恢复的还算可以，很快就又喊着要上了。<br>探索海图，那可是重要的事。</p><p>认识了星髓，据说是银的女儿！</p><details><summary>🌟 关于星髓的更多故事（点击展开）</summary><p>星髓之前一直跟着金探险，在金陨落在朝圣路后，也是她跟着花蕊的队伍去描绘弦论地景，去盗火去寻找金。还听了角取、合怔、雨晴、祁仙在那阶段的大业。</p><p>可惜现在听来，还是太混沌了，也不混沌初开，就是混沌！</p><p>【找到金然后复活金】确实是当时最大的事，没有十月的事和三月的事，也就没有现在的探索！</p></details><hr><h2 id="周刊内容"><a href="#周刊内容" class="headerlink" title="周刊内容"></a>周刊内容</h2><p>这周的内容主题有点多！有时会觉得要不要攒一攒，但是既然是周刊，这周发生的事就写下来！然后慢慢看看要不要拓展嘛。</p><p>四位数TODO就是这么来的咯！</p><hr><h2 id="所阅读的"><a href="#所阅读的" class="headerlink" title="所阅读的"></a>所阅读的</h2><p>首先是输入，我这周看的东西，大部分书籍和碎片阅读在我脑海里留不下任何印象，我晚上刷了第二天就会忘记，但有一些文章还是很令人印象深刻的，令人忍不住反复回去阅读。星髓教我银所信奉的：<strong>好文章就要耳鬓厮磨</strong>。</p><p>如果你看过我的推荐列表，就能看到有很多作品我是看了好几遍的。每一遍可能都有一些新的收获或见解，我觉得大家也值得尝试一下。自己以前看过的东西，再看一遍。这其实是一件很难的事情，就好像学生不愿意反复做自己做过的题一样。但这也有简单破解的方法，至于为什么简单破解，我在文章中间也会提一嘴。</p><h3 id="如何获得幸福"><a href="#如何获得幸福" class="headerlink" title="如何获得幸福"></a>如何获得幸福</h3><blockquote><p>三刷好文。</p></blockquote><p>讲的是大人们如何获得幸福，如果你还在象牙塔里那就没关系啦！不过在象牙塔里也能稍微学习一下幸福的观念！但看了感觉会更加焦虑呢，就好像象牙塔的所有平常弊端一样，看到那些热点、新技术，却没法直接上场！</p><p>总的来说在象牙塔里可以错过很多东西，这是默认选择，你可以选择错过大家。但相比之下只要有心，象牙塔里恐怕是时间最多的时候了！毕竟上班的大人们最缺的可能是时间。不然为什么有熬夜问题呢？</p><p>总结来说就是我们要从每时每刻里获得幸福：</p><ul><li>📑 <a href="https://1q43.blog/post/820/">你的价格 | 虹线</a>  </li><li>📑 <a href="https://sspai.com/post/86697">现代打工人如何获得幸福？ - 少数派</a></li></ul><p>这里面提到了工作和幸福理念。它可能是在前AI时代提出来的，现在AI时代到来之后，我觉得大家去了解这个文章里面所讲的理念是更加有必要的。为什么这么说呢？那么接下来就是关于AI的东西啦。</p><h3 id="AI下的创作泛滥"><a href="#AI下的创作泛滥" class="headerlink" title="AI下的创作泛滥"></a>AI下的创作泛滥</h3><p>受到GPT-4o产出的吉卜力风格图泛滥之后，有人写的一篇深度好文，发人深思呢。</p><p>以前人们说AI发展之后会代替人们干苦力活，代替人们去做危险的工作，但实际上AI们却在写小说、写诗歌、唱歌，而我们人类则去做那些苦力的工作。</p><p>当然，上面那句话是有所偏颇的，因为现在AI也有在帮我们做苦力。很多是脑力活动，由于实体机器人还有一段时间来发展（虽然我觉得很快了）。现在甚至改个变量名都要让AI来改。</p><p>原文英文链接：<br><a href="https://www.astralcodexten.com/p/the-colors-of-her-coat">The Colors Of Her Coat - by Scott Alexander</a></p><p>中文的可以直接搜【她外袍的颜色】<br>这里有个翻译得不错的：<a href="https://mp.weixin.qq.com/s/mcRH_OyO2NRdgLCfVUbDog">她外袍的颜色</a></p><blockquote><p>💡 <strong>推荐阅读</strong>：原文下面的六百多个评论也是卧龙凤雏，值得一看。</p></blockquote><p>如果你看完了原文，那么就继续吧。</p><p>我觉得对于创作者来说，一直值得思考的点是通过AI大量生产优质作品，让自己成为泛滥的一部分，只要自己秉持初心。让我泛滥，总比让低质量泛滥好。</p><p>重点在于目前AI发展得很好，导致互联网上真的出现了大量泛滥的AI内容，占满了人们的视野，而优质创作被埋没其中。</p><p>而到以后，AI生成出来的作品可就占99%了，那是绝大多数。而且AI生成的比绝大多数人类作家，甚至比人类顶尖的创作者都要好。这时候你说你是手工做的，反而是低质量的代名词了。</p><p>所以我会选择去拥抱AI。机械飞升。</p><p>但是机械飞升项目delay了，为什么呢？因为我要做游戏，我的身体渴望着我去做游戏。</p><p>所以说——</p><hr><h2 id="三分钟热度轮到谁了！"><a href="#三分钟热度轮到谁了！" class="headerlink" title="三分钟热度轮到谁了！"></a>三分钟热度轮到谁了！</h2><h3 id="文字游戏"><a href="#文字游戏" class="headerlink" title="文字游戏"></a>文字游戏</h3><blockquote><p>想做文字游戏！！！！！！！！</p></blockquote><p>一直以来我都非常想有个平台把自己的各种创作全部都放进去，有那种形式可以表现。没错，文字游戏就是一个很理所当然的选择，小红书上也有很多。因为我的创作基础是什么？基础的就是文字，就是文字。所以文字游戏就是最直接的方式，像动漫画或者做一个大游戏，就是手慢了。</p><p>这同样的理论也可以向东方的制作者 <strong>ZUN</strong> 学习。他本来也是做了音乐，为了这个音乐就去做一个东方系列出来，自己学了游戏剩下的部分。他其实最喜欢的就是音乐。来源：<a href="https://en.wikipedia.org/wiki/ZUN_(video_game_developer)#Early_and_personal_life">wiki</a></p><p>而我最喜欢的部分是世界观建构、人物和情节事件，那很多路径都是可以尝试的！</p><p>所以我想了一想文字游戏结构怎么设计，我想要那种非常简单的，可能只能放在同一个文件里面，一个是JSON配置，然后从上玩到下就给他玩完了。然后我仔细想了许久，这个文字游戏结构的设计。然后我还是顺手看了一眼以前没有仔细看过的Twine。以前为什么不看呢？因为我觉得这个引擎会限制住我，像我开发是直接web开发的，对不对？而且引擎复杂有上手的门槛。只不过稍微仔细看了一下，这个古人与我暗合啊。</p><blockquote><p>🔍 <strong>发现</strong>：Twine把我直接想到的东西全都想到了，完全覆盖我的思考了。</p></blockquote><p>这种之前也有一个例子，就是哲学。可能自己想东想西，想来想去，自己建构了一套三观。然后突然看到了大师的著作，我的想法他都想到了，但他还比我想得多。然后这时候就会选择了自己的哲学倾向了。这还是挺重要的，是因为如果没有自己的倾向的话，那就会兼听则明，择其善者而从之，各种择其善者而从之。然后会导致什么？会导致所有正确但冲突的理论都在脑海里面扎根，然后互相抢养分全部抢掉了。但如果自己有明确的倾向，就可以丢掉那些正确的，但对自己来说没有那么高效的东西。</p><hr><h2 id="极端天气"><a href="#极端天气" class="headerlink" title="极端天气"></a>极端天气</h2><p>周末的时候说有暴风，结果暴风一直不来，导致我就特别烦躁。我特别喜欢极端天气，最初的时候也是各种大雨，各种雨下面就会产生那种境界比较高的世界。首先大暴雨为什么会让人境界变高呢？因为极端天气下面传统的现实世界被解构了，被压住了，所有人都变成了”我要先保证自己”，或者所有人都停了下来，对不对？停了下来之后人们就会把自己的境界抬高，去追求更高的东西，更加形而上的东西。极端天气把人类社会给解构了，这时候艺术家们就会开始拿起画笔。</p><p>但是周六来了之后，周日就发生了一件令我很震惊的事，我是第一次看见扬尘天气预报。然后我吃了个早饭之后，那扬尘天气预报变成了雾霾天气预报。然后看了看外面这是黄沙满天啊，就是很多沙在天上旋转，停留漂移。然后也感觉确实很干，外面非常干，不像之前回南天一样湿湿的。之前说清明时节雨纷纷，那清明时节也没下雨啊，那时候太冷了，给它冷回去了。但这时候，这可是沙尘暴啊。</p><blockquote><p>⚠️ <strong>沙尘暴观察</strong>：这沙尘暴一直持续了三四天，期间我把口罩戴上了。我看到许多的人，街上许多人他们都不戴口罩，不戴口罩的都是长辈，年轻人全都戴上了口罩。这是一种直接的观察，可能年轻人的消息更灵通一点。当然，长辈们肯定是看天气预报的，然后会拼命地让孩子们戴上口罩。</p></blockquote><p>而我选择紧闭窗。感觉像那个《星际穿越》里沙尘暴之后的房子。</p><p>星际穿越不错，现在就听一下星际穿越的歌吧。<br>🎵 <a href="https://www.bilibili.com/video/BV1we4y1d72m/?share_source=copy_web&vd_source=fb764b612948cbb4536fcaf4acccb5fa">《星际穿越》电影原声带无损音质合集</a></p><hr><h2 id="Cursor我去你的！！！！"><a href="#Cursor我去你的！！！！" class="headerlink" title="Cursor我去你的！！！！"></a>Cursor我去你的！！！！</h2><p>周末Cursor登录不进去，整整卡了我两个小时，各种登录问题。</p><p>这可太烦了，因为现在没有Cursor完全无法进行独立开发。</p><p>所以说暴风一直不来，然后Cursor又登不进去，烦呢。</p><p>然后既然Cursor用不了，我就尝试用一个新的软件，这个软件就是Windsurf帆板。这个可是和Cursor齐名的东西，只是当初我选择了Cursor。</p><p>Windsurf，那个界面都挺熟悉的，该不会也是VSCode出来的吧？然后它刚登陆，它说我可以从Cursor导入配置。那Cursor从VSCode导配置，你直接从那里导配置啊，你这抄人家生态了，对不对？这时候我就觉得不太对劲了。反正有试用额度，我就试了一下。真难用啊！没有Cursor那么好用，Cursor工程能力是强的，但这个Windsurf，我觉得你如果写一个单文件还是可以的。但总的来说也不是不能用。</p><p>所以我就猛用来搞那个世界观wiki，然后也同时在搞梦境漫游者的初步设计！</p><p>Windsurf额度一下就用完了。</p><div align="center">  <a href="/img/weekly/250418-windsurf.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/weekly/250418-windsurf.webp"></a>  <p><em>Windsurf界面截图</em></p></div><p>这个额度用的很快，像Claude Sonnet 3.7老师很喜欢各种调用工具的，它就调一次给你算一个Action。不像Cursor那样，你无论在一个请求内调多少次，它都只给你算一次。</p><p>不过现在用Cursor都珍惜500个额度了，单文件的事都不让Cursor干了，自己手动拷。很久以前Cursor的慢速模式是很快的，然后现在可能用的人多了或者白嫖的人多了，额度还是要珍惜一下的。而且像之前3.7刚出来的时候，Cursor的慢速模式根本用不了Claude Sonnet 3.7，服务器繁忙，3.7一直服务器繁忙。</p><blockquote><p>💻 <strong>AI IDE对比</strong>：Cursor一开始觉得没什么，然后用了一圈Copilot、Windsurf、Trae下来，Cursor的含金量越来越高。我都不知道其他家他们怎么做AI IDE的，评价为抄Cursor，特别是Copilot步Cursor后尘。网上还有一大堆人说他新更新了什么很厉害的功能，那功能Cursor半年前就有了！</p></blockquote><p>这个Windsurf用完之后我也不考虑付费了。我也在想到底要怎么办了，我自己又觉得它不太行。哎呀，Cursor又登不上去，不行，我非得把这个问题解决了。然后我这时候刚好在远程办公加班，也在同时做自己的项目，公司项目要等编译的。点一下编译，然后还有点一下运行也要等好久，再开始等的时候我就切回来，切回来做自己的项目。毕竟放假嘛，切回来的时间就会长一点，如果是在公司的话，切回来会有个定时器，就我自己做的那种类似番茄钟的正倒计时东西。因为总是有这种需要等一下的事情，也不能干等着，对不对？然后我就做了一个一两分钟的提醒，可以选择一两分钟后提醒自己。</p><p>但是这个需要等一下，其实最好是等。因为之前看过一个人，就是那个讲拖延症的旧时代电台里面，就提到为了维持你工作的专注，其实应该在那干等着。不然如果你不等着切出去做其他事儿了，哪怕切出去其实也是工作的事儿，其实是影响自己的心流的。断了，与其断了，你还不如集中精力继续在这个项目上。集中精力在自己接下来要做的事情上，你说等个三分钟，那就等嘛，除非你真的得重新编译，等个半小时。</p><h3 id="Cursor登录问题解决"><a href="#Cursor登录问题解决" class="headerlink" title="Cursor登录问题解决"></a>Cursor登录问题解决</h3><p>回到Cursor登不进去的事，我尝试了一下在公司电脑上登那个Cursor。结果发现登不进去，机器问题了。机器问题是怎么回事儿呢？然后猜想了一下，那肯定是网络问题。是不是网络问题呢？然后把远程关掉，用笔记本电脑登了一次。能登。为什么能登啊？那就是设备问题了。设备问题就好说了，但我之前已经尝试过很多什么卸载啊，删数据什么的。那肯定是还有什么数据不对。</p><blockquote><p>🔧 <strong>解决方案</strong>：最终就是清理了Roaming里面的数据才能重新登陆，而且我仔细看了一下，它里面还是有那个工作区数据的，你可以单独把工作区数据拷回来，你只把用户登录数据给清掉就行了。</p></blockquote><p>好的现在又能用这个神Cursor了！</p><p>这个时候暴风也来了，除了暴风还有暴风雨，然后那天就直接黑了。然后啪啪啪啪啪的暴雨打进来，阳台上的东西到处乱飞，还有我那个散架的画架也飞来飞去的。</p><p>终于来了，我的心情就舒畅了，然后整个精神身心都得到了健康的恢复。还有什么如此幸福的时刻呢？暴雨又来了，而且我的项目也做出来了，进度还很不错。</p><p>还有金船长也很帅！我向她请求拍了一张：</p><div align="center">  <a href="/img/heart/250417-goldenWithTridentSmile.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/heart/250417-goldenWithTridentSmile.webp" width="512"></a>  <p><em>金船长的微笑</em></p></div><hr><h2 id="世界观wiki"><a href="#世界观wiki" class="headerlink" title="世界观wiki"></a>世界观wiki</h2><p>把框架搭好了部署了。</p><p>目前只有萝北是对的，其他都是AI生成的，先不要看，看了反而混淆了，AI幻觉挺大的。</p><p>之前我一直想把那个给改掉，就是改成正确的，我还在首修，但我只修了一半，还远远不能发布，也没什么空，现在就更没空了，具体为什么没空？我等一下会说。</p><p>现在做了世界观wiki挺方便的，po个角色po上wiki就行了。</p><p>比如我，<a href="https://tobenot.top/Tobenot-Story-Wiki/#/entry/characters/heartworld/luobei">萝北</a>！</p><p>等以后更丰富条目了，那我这个文每一篇文章都像是一个链接，就像我做的AI剧本杀一样，你点那个关键词它还会有关键词解释。那我也是有一个大wiki，看爽了。</p><blockquote><p>🤔 <strong>反思</strong>：说实话，我10年前就应该做这种项目了，就应该做这种世界观wiki，但我总觉得因为自己怕剧透。剧透就标记出来？剧透内容标记出来之后，我也能放心写啊，我已经明确这个剧透了，而且我的正作还有五六年才能出来呢，是不是？那你看不看了呢？而且有些人是不怕剧透的，有些人是看了剧情之后还能再体验一次，因为是提前被剧透了，所以他的理解可能会更深，可能会更快地注意到那些细节。</p></blockquote><p>我挺讨厌剧透的，我自己在看一个文艺作品之前是不会去看剧透的。但是即使被剧透了，我也会再看一遍。我就是那种能够一个电影看3-4遍的人。重要的是体验，就像游戏设计一样，游戏设计重要的也是体验。像我三刷那个Control游戏，我是三刷的，注重体验，而不是说玩过了就不想玩了，我不会这样，我不是这样的人。</p><p>世界观wiki做出来之后，我就能更快速地把灵感输出起来，但是这并不是一个作品。这可能也会产生一种陷阱，这虽然很便利，但是我把它输出在这儿了，等于说是挖了更多的坑，对吧？但我喜欢挖坑，我特别喜欢挖坑，写就写就完了。还是越早把自己的灵感po出来越好。不然你就像什么时候会失去热情啊，或者发生什么其他意外，对不对？这时墓志铭就派上用场了。毕竟人生是荒诞的。</p><p>📚 <a href="https://yd.qq.com/web/bookDetail/28932750813ab6bd1g010e25"><strong>哲学家都干了些什么？</strong></a></p><hr><h2 id="梦境漫游者"><a href="#梦境漫游者" class="headerlink" title="梦境漫游者"></a>梦境漫游者</h2><p>上周周刊说：</p><blockquote><p>明天工作顺利不加班的话，下班就开始做幸存者类游戏的初版demo吧！</p></blockquote><p>说的是周五，当然你已经看到了。我周六日还扛着电脑稍微加班呢。那周五确实不太顺利，下班也没写那个博客，下班回去就休息了。然后周六日就主要精力都在做这个梦境漫游者了。</p><details><summary>🎮 游戏开发进展详情（点击展开）</summary><p>周末花了两天从0.5~1做出来了初始的demo，也就是一个主菜单，一个房间界面一个匹配，这个是模板给的，也就是一个现成的幸存者类模板，我就把现在的模板从游戏进入开始能看到的东西都审核了，重新重构了一下，然后找了一张素材里面的地图，然后地图有很多bug。那地图纯粹是给人那种展示的，他就没考虑过一个人要怎么在里面行走，他的路都很窄，然后导航网格放上去，导航不了。他不是联通的，这就很奇怪。但是那个演示地图它的默认游戏模式是怎么移动的？它是那个俯视角鼠标移动模板，就是它不用WASD移动的。一旦把它接入了WASD移动，马上就能感受出它的问题，这个太难走了，各种东西卡你。还有空气墙什么的。</p><p>总之就是给那个地图稍微打扫了一下，真的很像打扫，就是把路给清出来，把路给清宽一点，然后觉得不太合理的地方再打理一下，比如说他有一座单个的桥，你这桥过不去的呀，你会被围攻的，然后我就给旁边加了一个桥。因为幸存者的游戏基本上是一个围攻的游戏，敌人会四面八方涌过来，然后围攻玩家。所以说你不能做这种桥一样的东西，你不能说只有一个通路的东西。无论如何要保证玩家有两条路可以走，有两条路可以去到目的地。是吧？一般来说吸血鬼幸存者都是那种大屏地图的，那就很多路，也适合围攻，非常适合围攻。但是既然我选择了要搞这种窄地图的，那就要再研究一下了，研究一下这个游戏机制怎么切进去。</p></details><h3 id="引擎选择的思考"><a href="#引擎选择的思考" class="headerlink" title="引擎选择的思考"></a>引擎选择的思考</h3><p>当然我觉得在这里面最amazing的地方是，我其实过了半年才第一次回归虚幻引擎。半年之前我决定转向网页游戏开发，因为那时候的AI对于网页游戏非常的厉害。但现在的问题是泛滥了，就是泛滥了。小红书还有一大堆做网页的，做前端开发的，就谁都来做，不过也确实是AI搞得这些东西没门槛，是不是？我早就该预料到这个会很泛滥的。</p><blockquote><p>🔄 <strong>技术栈思考</strong>：局限于一个技术栈其实是不太好的，你限制了自己的视野。就好像小的时候用RPG Maker就不去探索3D引擎一样。然后终于探索了，然后就停留在了虚幻引擎蓝图，导致对代码一直没有什么学习。然后后面用虚幻引擎之后就固守虚幻引擎，我就不碰Unity，就觉得有些不行。然后去年国庆就碰了一下Unity，花了几天入门了做了个LLM+游戏，Unity对独立游戏开发来说实在是太爽了。</p></blockquote><p>我做网页游戏做多了，我就想回去虚幻引擎做点什么，这是我的生命告诉我的。没有什么其他的理由，网页游戏我当然也会继续做，毕竟做起来很爽。但是我这个幸存者是不会选择Web或者Unity的，为什么？因为我要画面，虚幻引擎吃得好，我做这个游戏就是为了把我素材库里的东西用出来。</p><p>但是说实话，web开发更爽，就是AI能100%hold住，你不需要学任何的东西，像引擎你要学，但是web开发就是不需要学任何东西，你就和AI说你要做什么，AI就会做出什么来，所以说为什么JavaScript和TypeScript是世界上最好的语言？他们什么都能做，而且他们是最简单的。这个简单也体现在它的形式很简单，就是网页就是网页。所以说这语言是真神奇啊。</p><h3 id="AI生成游戏美术"><a href="#AI生成游戏美术" class="headerlink" title="AI生成游戏美术"></a>AI生成游戏美术</h3><p>回到这个梦境漫游者，总之我用AI生成了它的主界面，主界面和加载界面这些要生成一下，我们游戏有特定的美术吗？这个爽了，就是以前的游戏我都只能用真正的3D场景去给你截图做画面，或者用一个真实的3D场景来做主菜单，比如说我的太空射击游戏，它主菜单就是纯3D场景。所以其他的游戏可能就是一个游戏内截图。但是现在有了AI你就能做那种概念美术。我也理解了，为什么大厂就不喜欢用那种真实的图来做那种宣发，他就喜欢用画的，因为更好看，而且总得给原画同学一些工作，对不对？</p><p>然后AI就给我生成了几个概念美术，拿去做菜单后，感觉瞬间就有感觉了，瞬间就有那种调性了。看着声音按钮，我有了新的想法 - 能不能用AI来做按钮？结果真的做出来了！我用PS去做按钮的激活态，其实挺简单的，就是改改而已。很快就做出了按钮的普通状态和悬停状态。这个美术瞬间就有调性了，有那种感觉、那种feeling了。这是令我觉得很美妙的地方，这是AI时代才能做到的。如果去找美术，还得对接个两星期呢，是吧？</p><hr><h2 id="SunoAI-AI生成音乐"><a href="#SunoAI-AI生成音乐" class="headerlink" title="SunoAI AI生成音乐"></a>SunoAI AI生成音乐</h2><p>我很喜欢听音乐，觉得应该去申请一个网易云音乐人，这样我就能把音乐传上去，然后任何地方都能用外联播放器播放。毕竟对于一个网页，对于web前端来说，一首5MB的音乐是很奢侈的，你要加载多久啊？你在这篇文章看到的所有图片都小于100KB，这还不算压缩得很好的。</p><blockquote><p>💡 <strong>技巧</strong>：如果上传到网易云音乐，就可以通过几十个字节的外链播放器去播放我的歌。那多好，但不知道这个卡不卡AI创作，试一下吧。</p></blockquote><p>SunoAI已经超过450首歌了，不是特别好听的都不应该留，再抽再听，只留精品。我们可以生成很多的，不能因为一段好听就留下来，要整首好听才行。</p><p>这其中三首我觉得特别有特色的，都剪进去了：<br>🎵 <a href="https://www.bilibili.com/video/BV1psoBY8E9L/">耗时100小时弃了2k个分镜剪出来的一部AI原创动漫预告片？</a></p><hr><h2 id="INFP的灵感修bug方式"><a href="#INFP的灵感修bug方式" class="headerlink" title="INFP的灵感修bug方式"></a>INFP的灵感修bug方式</h2><p>这个幸存者模板有几个bug，但它们都很好修很好定位。修了之后就有那种成就感，挺爽的。</p><p>但这里也遇到了大问题，这个大问题被我的运气解决了。</p><blockquote><p>🧠 <strong>灵感思考</strong>：我总觉得INFP是有灵能槽的。INFP一定程度靠灵感和直觉去解决问题，从散点的现象去推演原理，推演过程就是个迷。值得SOP化，标准化探索一下，如果可以通过AI和机械复制这种大联想，应该能对大家有很大帮助！</p></blockquote><p>比如周末做独游的虚幻引擎打包错误和导航网格偶现崩溃（寻路太多崩DS了），工作中的图像生成问题和区域坐标映射、标点逻辑偏位。</p><p>虚幻引擎打包错误，是我在看插件教程的时候偶然注意到有人在说这个插件打包的时候要禁用，不然打不出包。但我真的打出包来了，却完全无法运行，双击完全没反应，这根本没法debug，根本没有log。但是我在搜索”为什么打包之后的游戏打不开”之后，刚好有个帖子提到了好多解决方案，然后我试了前几个都没什么用，后面看到有人说实验性插件可能会导致打包游戏无法打开，因为Epic Game对它的支持并不是很好。然后我把那些实验性插件一个个禁用了，瞬间解决了。</p><hr><h2 id="但是记性不好的bug不好修了"><a href="#但是记性不好的bug不好修了" class="headerlink" title="但是记性不好的bug不好修了"></a>但是记性不好的bug不好修了</h2><p>哎呀！我一个视频生成网站（Vidu）的自动续费忘记关了，自从上个月过期之后我就再没打开过，今天好奇打开了一下发现自己还是终极会员… 一看原来是自动续费没关，感觉很痛心，还差几天这个月的就过期了。算了，不是很想折腾，只想着怎么在剩下几天用回票价。物尽其用，让这笔意外的开销不那么令人遗憾！</p><div align="center">  <a href="/img/weekly/250418-vidu.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/weekly/250418-vidu.webp"></a>  <p><em>Vidu会员界面</em></p></div><p>真的肉疼啊！</p><p>所以说这周末的更新可能就不是这个梦境漫游者，可能我会把精力集中在出这种AI生成视频上。毕竟真的很贵啊，之前看动漫的时候还好，前两个月都拿来做动漫的，其实也算物尽其用。但这个月我一天都没用，到现在一天都没用。</p><p>于是熬了一个大夜把两部新坑的基础立绘出了，准备拿Vidu大做特做。</p><div align="center">  <a href="/img/weekly/250418-dreamwalkerPortrait.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/weekly/250418-dreamwalkerPortrait.webp"></a>  <p><em>《梦境漫游者》初版角色立绘</em></p></div><div align="center">  <a href="/img/weekly/250418-ACpreview.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/weekly/250418-ACpreview.webp"></a>  <p><em>百合DBG游戏概念图</em></p></div><hr><h2 id="熬夜问题"><a href="#熬夜问题" class="headerlink" title="熬夜问题"></a>熬夜问题</h2><p>我要停止熬夜基本上就等于放弃创作。</p><p>然后我确实放弃了几天，早睡了一点。那几天确实精神非常好，然后身体逐渐告诉我它要创作，它要创作。”你赶紧给我创作。”然后就熬了一个大夜，把博客的新结构给搞出来了。这是上周的事，毕竟上周是第一个周刊，对，上周的第一篇周刊就是熬一个大夜做出来的。</p><p>这周看了一下，睡得都很晚了，比起上周推行作息SOP普遍晚了一节，但也有放弃了，放手了的时候。</p><blockquote><p>⏰ <strong>自我激励</strong>：我觉得还是得靠手办计划，靠物质的推动来执行这个熬夜问题。之前金船长在荧露树林得出的结论也差不多。</p></blockquote><p>但是这个计划也有遇到阻力，这个阻力就是我的物欲降低了。不能花钱解决的事情，我也没法花时间去解决，我的时间拿不出手。我需要一些不能花费我大量时间的诱人的奖励，但是手办计划也没有什么材料了，我的物欲最近因为精神充实而降低了，因为创作不息而且自我否定不多而降低了。</p><hr><h2 id="作品集"><a href="#作品集" class="headerlink" title="作品集"></a>作品集</h2><p>我在墓志铭&#x2F;作品集里更新了kigurumi照片</p><p>🔗 <a href="https://tobenot.top/Epitaph/#/photographs">墓志铭</a></p><p>这是我第一次把这种照片发表到公域，以后也将不对此做隐藏。这是萝北的精神，萝北希望展示真正的自己，更多的展示真正的自己。</p><p>当然会不太受一些人的理解，但是你看嘛，我就是这么奇怪的一个人。如果你评价我是不正常的，那可能对我来说是一个夸赞。自古到今都是如此。</p><blockquote><p>💭 <strong>心界哲学</strong>：从银的时代到金的时代，心界的人们所走的路与【正常】都远打不上边。</p></blockquote><p>应该写真正的墓志铭了。</p><hr><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>这次周刊的内容非常大量。我测了一下原稿有八千字，然后我还会拿AI来润一遍，通顺一下句子，因为我是录音输入的！就真的像是记者或者播客podcast一般呢！</p><p>其实并不一定每周都有这么多内容，因为我是在todo旁边有遇到什么话题就收集起来的那种，所以肯定每周都不一样。有可能我创作少了或者看的少了，那周刊主题就会变少。</p><p>那么下周再见啦！我是萝北，请继续关注《Delta Sea 周刊》！</p><div align="center">  <a href="/img/heart/250417-luobeiSelfie.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/heart/250417-luobeiSelfie.webp"></a>  <p><em>我的自拍！</em></p></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h1 id=&quot;2025-04-10-2025-04-17&quot;&gt;&lt;a href=&quot;#2025-04-10-2025-04-17&quot; class=&quot;headerlink&quot; title=&quot;2025.04.10 - 2025.04</summary>
      
    
    
    
    <category term="DeltaSea周刊" scheme="https://tobenot.github.io/categories/DeltaSea%E5%91%A8%E5%88%8A/"/>
    
    
    <category term="DeltaSea周刊" scheme="https://tobenot.github.io/tags/DeltaSea%E5%91%A8%E5%88%8A/"/>
    
    <category term="weekly" scheme="https://tobenot.github.io/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>Delta Sea 周刊 - 开刊啦！</title>
    <link href="https://tobenot.github.io/2025/04/10/Weekly-250410-FirstWeekly/"/>
    <id>https://tobenot.github.io/2025/04/10/Weekly-250410-FirstWeekly/</id>
    <published>2025-04-09T18:34:28.000Z</published>
    <updated>2025-04-17T18:49:05.173Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><p>2025.04.01 - 2025.04.09</p><blockquote><p>撰稿人：萝北<br><a href="/img/characters/luobei2.jpg" class="gallery-item" style="box-shadow: none;"> <img src="/img/characters/luobei2.jpg" width="300"></a></p></blockquote><h2 id="心界所见"><a href="#心界所见" class="headerlink" title="心界所见"></a>心界所见</h2><p>终于出海了！我是第一次到三角海上，金船长是第三次！<br>金船长已经算是传奇人物了，找寻银，在海上死去又回归。<br>三月底的时候把69届心界大会开完了。<br>这时候也是我决定要写 Delta Sea 周刊 的时候！<br>如果不记下来，我们就会忘记一切。<br>但那是日刊的内容，周刊还是要输出的，要考虑销路呢…<br>所以本记者萝北，华丽上场！</p><h2 id="清明所见"><a href="#清明所见" class="headerlink" title="清明所见"></a>清明所见</h2><p>清明节都在玩Minecraft<br>这个包是爽包，和朋友玩个两三天的话，非常值得收藏哦！<br><a href="https://www.bilibili.com/video/BV11w4m1y7jT/?share_source=copy_web&vd_source=fb764b612948cbb4536fcaf4acccb5fa">【FPS整合包！超爽“突突突”！！1600+生物！！玩这个包请把脑子丢掉！丨喷气背包猫Jetpack Cat 我的世界整合包 试玩】</a></p><p>然后有空都在写信，《于荧露树林（下）》，信的本体是不公开的，不过里面梳理的精神自然会慢慢输出。<br>69届心界大会有不少非常值得写的内容，可以说是改天换地级别的了。</p><h2 id="返工"><a href="#返工" class="headerlink" title="返工"></a>返工</h2><p>节后返工的第一天效率最高，心流上了，我使用了AIBS去抵抗拖延倾向，提高做事情的效率，AIBS在这里：<br><a href="https://www.bilibili.com/video/BV1TpsQejErS/?share_source=copy_web&vd_source=fb764b612948cbb4536fcaf4acccb5fa">【也许真的让我找到了有效克服拖延的方法【旧世代电台·专注力专题】】</a><br>AIBS也值得有个专题来讲！</p><p>根据69届的作息SOP，后面的几天都在1点左右早睡了。<br>而“晚上无日程”这种精神让我毫无独立产出，就都在认真上班，下班了就洗澡刷手机准备睡。<br>所以今天（4.09 11:00 - 次日3点）觉得必须得干点东西了，报复性熬到了3点，把博客一次性从69届之间整理到新结构了。符合预期的停不下来了。点燃的心流如何浇灭呢？<br>“晚上无日程”这种还得细想，要不改成挪一小时来创作？但是又要问了，点燃的心流如何浇灭呢？<br>好久不创作，我是会很不舒服，会反弹的。想想也是从很久以前OMA（万象魔法学院）暂停后后面就没什么游戏项目。<br>明天工作顺利不加班的话，下班就开始做幸存者类游戏的初版demo吧！<br>希望整个体验会偏向东方那一种，说的不是那种弹幕游戏方式的，我说的是那种关卡流程。开头就是清一大堆小怪，然后以boss战为高潮。boss战就是那种单人mmo的体验。在战斗过程中也把剧情看了。</p><p>明天加班的话，那就更点博客算了。</p><h2 id="剧变"><a href="#剧变" class="headerlink" title="剧变"></a>剧变</h2><p>就是关税<br>感觉69届的规划更有意义了<br>我的评价就是我补仓了</p><h2 id="AI仙人"><a href="#AI仙人" class="headerlink" title="AI仙人"></a>AI仙人</h2><p>gemini-2.5-pro！<br>我之前奉claude-sonnet-3.7为码神，其他都是码农<br>挑战者竟然这么快就出现了，gemini-2.5-pro比3.7老师更收敛，更专业！<br>但是工程能力肯定是还不如3.7，所以我今晚修作品集&#x2F;做wiki的时候都还是用3.7老师<br>顶多设计的时候用下gemini-2.5-pro吧</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;p&gt;2025.04.01 - 2025.04.09&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;撰稿人：萝北&lt;br&gt;&lt;a href=&quot;/img/characters/luobei2.jpg&quot; class=&quot;gallery-</summary>
      
    
    
    
    <category term="DeltaSea周刊" scheme="https://tobenot.github.io/categories/DeltaSea%E5%91%A8%E5%88%8A/"/>
    
    
    <category term="DeltaSea周刊" scheme="https://tobenot.github.io/tags/DeltaSea%E5%91%A8%E5%88%8A/"/>
    
    <category term="weekly" scheme="https://tobenot.github.io/tags/weekly/"/>
    
  </entry>
  
  <entry>
    <title>互联网上的&quot;不速之客&quot;：当我的服务器遭遇扫描</title>
    <link href="https://tobenot.github.io/2025/03/17/Note-Tech-SSL-Error/"/>
    <id>https://tobenot.github.io/2025/03/17/Note-Tech-SSL-Error/</id>
    <published>2025-03-17T14:35:47.000Z</published>
    <updated>2025-04-09T15:00:37.806Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h1 id="互联网上的”不速之客”：当我的服务器遭遇扫描"><a href="#互联网上的”不速之客”：当我的服务器遭遇扫描" class="headerlink" title="互联网上的”不速之客”：当我的服务器遭遇扫描"></a>互联网上的”不速之客”：当我的服务器遭遇扫描</h1><p>最近，我注意到服务器日志中出现了一些有趣的记录 - SSL&#x2F;TLS错误，显示有远程IP尝试连接我的服务器但使用了错误的协议版本。这让我意识到，即使是一个普通的个人服务器，也会成为互联网上各种扫描器的目标。今天就来聊聊这个话题，分享一些关于服务器扫描的基本知识。</p><h2 id="我遇到了什么？"><a href="#我遇到了什么？" class="headerlink" title="我遇到了什么？"></a>我遇到了什么？</h2><p>在查看服务器日志时，我发现了类似这样的错误记录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SSL/TLS 错误:</span><br><span class="line">  &#x27;错误类型&#x27;: &#x27;Error&#x27;,</span><br><span class="line">  &#x27;错误消息&#x27;: &#x27;...wrong version number...&#x27;,</span><br><span class="line">  &#x27;错误代码&#x27;: &#x27;ERR_SSL_WRONG_VERSION_NUMBER&#x27;,</span><br><span class="line">  &#x27;远程地址&#x27;: &#x27;::ffff:185.147.XXX.XX&#x27;,</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>这表明有远程主机尝试与我的服务器建立SSL&#x2F;TLS连接，但使用了不兼容的协议版本。这通常不是正常用户的行为，而是自动化扫描器的特征。</p><h2 id="互联网扫描：无处不在的”探索”"><a href="#互联网扫描：无处不在的”探索”" class="headerlink" title="互联网扫描：无处不在的”探索”"></a>互联网扫描：无处不在的”探索”</h2><p>在互联网这片”大海”中，有无数的”探测船”在不断地扫描每一个可能的”港口”。这些扫描有各种目的：</p><h3 id="1-安全研究"><a href="#1-安全研究" class="headerlink" title="1. 安全研究"></a>1. 安全研究</h3><p>许多研究机构和安全公司会进行互联网范围的扫描，以了解网络安全状况、漏洞分布和服务部署情况。像Shodan、Censys这样的搜索引擎会定期扫描整个IPv4地址空间。</p><h3 id="2-恶意活动"><a href="#2-恶意活动" class="headerlink" title="2. 恶意活动"></a>2. 恶意活动</h3><p>不幸的是，也有攻击者在寻找可利用的目标。他们扫描特定端口和服务，寻找配置错误或未修补的漏洞。</p><h3 id="3-网络测绘"><a href="#3-网络测绘" class="headerlink" title="3. 网络测绘"></a>3. 网络测绘</h3><p>一些组织会创建互联网”地图”，记录IP地址、开放端口和提供的服务，这对网络研究非常有价值。</p><h2 id="他们如何找到我的服务器？"><a href="#他们如何找到我的服务器？" class="headerlink" title="他们如何找到我的服务器？"></a>他们如何找到我的服务器？</h2><p>即使你没有广泛宣传你的服务器，它仍然可能被发现：</p><ol><li><strong>IP地址扫描</strong>：最直接的方法是简单地扫描IP地址范围，检查每个地址上的开放端口。</li><li><strong>DNS记录</strong>：如果你的服务器有公开的DNS记录，这会使它更容易被发现。</li><li><strong>SSL证书透明度日志</strong>：当你申请SSL证书时，这些信息会被记录在公开的透明度日志中。</li><li><strong>反向查询</strong>：通过查询IP地址分配数据库，可以确定特定组织拥有的IP范围。</li></ol><h2 id="这意味着我的服务器不安全吗？"><a href="#这意味着我的服务器不安全吗？" class="headerlink" title="这意味着我的服务器不安全吗？"></a>这意味着我的服务器不安全吗？</h2><p>被扫描并不意味着你的服务器不安全。事实上，这是互联网上的日常现象，就像你的房子门口偶尔会有人经过一样。关键是确保你的”门锁”足够牢固：</p><ol><li><strong>保持更新</strong>：及时应用安全补丁和更新。</li><li><strong>最小化暴露面</strong>：只开放必要的端口和服务。</li><li><strong>强化配置</strong>：确保服务配置安全，禁用不必要的功能。</li><li><strong>使用防火墙</strong>：限制可以访问你服务器的IP地址和端口。</li><li><strong>监控日志</strong>：定期检查服务器日志，识别异常活动。</li></ol><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>互联网是一个充满活力但也潜藏风险的地方。了解你的服务器如何被发现以及如何保护它，是运行任何在线服务的基本知识。下次当你看到服务器日志中的奇怪连接尝试时，不必过于惊慌 - 这只是你成为了互联网这片大海中的一个被注意到的”岛屿”。</p><p>保持警惕，但也不必过度担忧。毕竟，知识和适当的安全措施是最好的防护。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h1 id=&quot;互联网上的”不速之客”：当我的服务器遭遇扫描&quot;&gt;&lt;a href=&quot;#互联网上的”不速之客”：当我的服务器遭遇扫描&quot; class=&quot;headerlink&quot; title=&quot;互联网上的”不速之客”：当我的服务器</summary>
      
    
    
    
    <category term="技术笔记" scheme="https://tobenot.github.io/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="服务器" scheme="https://tobenot.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="网络安全" scheme="https://tobenot.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    <category term="扫描器" scheme="https://tobenot.github.io/tags/%E6%89%AB%E6%8F%8F%E5%99%A8/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
  </entry>
  
  <entry>
    <title>SunoAI音乐生成实践指南</title>
    <link href="https://tobenot.github.io/2025/02/16/Tutorial-Suno/"/>
    <id>https://tobenot.github.io/2025/02/16/Tutorial-Suno/</id>
    <published>2025-02-16T12:09:16.000Z</published>
    <updated>2025-04-09T15:06:47.150Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><p>把下面的指引发给AI，然后你再描述一下你要什么音乐，AI就会帮你写提示词了。<br>然后去<a href="https://suno.com/invite/@greenradish">SunoAI</a> 注册账号，就可以生成音乐了。<br>记得说你要纯音乐还是歌词音乐。</p><h1 id="音乐创作完整指引"><a href="#音乐创作完整指引" class="headerlink" title="音乐创作完整指引"></a>音乐创作完整指引</h1><h2 id="一、创作前准备"><a href="#一、创作前准备" class="headerlink" title="一、创作前准备"></a>一、创作前准备</h2><ol><li><p><strong>确定音乐类型</strong></p><ul><li>纯音乐：角色主题曲、战斗曲、情景曲</li><li>歌词音乐：主题曲、片尾曲、角色歌</li></ul></li><li><p><strong>角色&#x2F;场景分析</strong></p><ul><li>核心特质&#x2F;氛围</li><li>能力特征&#x2F;环境特点</li><li>重要经历&#x2F;关键时刻</li><li>情感基调&#x2F;主题</li></ul></li></ol><h2 id="二、音乐标签设计"><a href="#二、音乐标签设计" class="headerlink" title="二、音乐标签设计"></a>二、音乐标签设计</h2><ol><li><p><strong>标准格式（6-8个标签）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">主要风格 + 核心乐器 + 情感氛围 + 特殊效果</span><br></pre></td></tr></table></figure></li><li><p><strong>常用组合示例</strong></p></li></ol><ul><li>温柔型：<code>gentle violin, warm strings, peaceful melody</code></li><li>史诗型：<code>epic orchestral, divine electronic, powerful anthem</code></li><li>战斗型：<code>intense strings, aggressive rhythm, powerful crescendo</code></li></ul><ol start="3"><li><strong>乐器选择原则</strong></li></ol><ul><li>同一角色保持主要乐器一致</li><li>场景音乐根据氛围选择</li><li>注意乐器间的和谐搭配</li></ul><h2 id="三、歌词创作规范"><a href="#三、歌词创作规范" class="headerlink" title="三、歌词创作规范"></a>三、歌词创作规范</h2><ol><li><strong>标准结构示例</strong>：The Rule Divine（鸿律篇）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[Intro] - 开场引子，设定基调</span><br><span class="line">Beyond the rules of time</span><br><span class="line">Beyond the laws divine</span><br><span class="line">Through sacred light we shine</span><br><span class="line">Through design</span><br><span class="line"></span><br><span class="line">[Verse 1] - 第一段叙事，铺陈故事</span><br><span class="line">Through pages of time, where stories align</span><br><span class="line">Your voice calls to me, sets mysteries free</span><br><span class="line">Across universe walls, where destiny falls</span><br><span class="line">Their gift lights the way, through darkness we&#x27;ll stay</span><br><span class="line">Every rule that binds the stars</span><br><span class="line">Every law that heals our scars</span><br><span class="line">In your eyes I see them all</span><br><span class="line">As ancient wisdom starts to fall</span><br><span class="line"></span><br><span class="line">[Chorus] - 副歌，核心主题</span><br><span class="line">We are the keepers of the rule divine</span><br><span class="line">Guardians of love beyond space and time</span><br><span class="line">Through sacred pages our souls intertwine</span><br><span class="line">Dancing through laws that were written in light</span><br><span class="line">(Written in light)</span><br><span class="line"></span><br><span class="line">[Verse 2] - 第二段发展</span><br><span class="line">[Chorus] - 重复副歌</span><br><span class="line">[Bridge] - 情感转折</span><br><span class="line">[Chorus] - 最终升华</span><br><span class="line"></span><br><span class="line">[Outro] - 结尾收束，呼应开头</span><br><span class="line">As the last rule fades to light</span><br><span class="line">Our love remains divine</span><br><span class="line">Through sacred pages we&#x27;ll write</span><br><span class="line">Our story for all time</span><br></pre></td></tr></table></figure><p>实际创作时请不要带上中文注释，只需要歌词和段落标签。</p><ol start="2"><li><strong>歌词要素</strong><ul><li>核心意象的运用（如：rules, light, stars）</li><li>押韵技巧（time&#x2F;divine&#x2F;shine）</li><li>情感层次（从叙事到升华）</li><li>主题呼应（首尾呼应，意象统一）</li></ul></li></ol><h2 id="四、注意事项"><a href="#四、注意事项" class="headerlink" title="四、注意事项"></a>四、注意事项</h2><ol><li><strong>音乐标签</strong></li></ol><ul><li>控制在6-8个</li><li>表达要准确</li><li>风格要统一</li><li>符合角色&#x2F;场景</li></ul><ol start="2"><li><strong>歌词创作</strong></li></ol><ul><li>结构完整</li><li>押韵自然</li><li>意象统一</li><li>情感递进</li><li>主题鲜明</li></ul><ol start="3"><li><strong>整体把控</strong></li></ol><ul><li>服务故事</li><li>突出特点</li><li>保持风格</li><li>注重质量</li></ul><p>记得带上歌名，歌名用 The Bridge（桥） 这种格式，英文名+在中文括号里的中文名。<br>歌曲风格描述要在200个英文字母以内。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;p&gt;把下面的指引发给AI，然后你再描述一下你要什么音乐，AI就会帮你写提示词了。&lt;br&gt;然后去&lt;a href=&quot;https://suno.com/invite/@greenradish&quot;&gt;SunoAI&lt;/a&gt; 注册账号</summary>
      
    
    
    
    <category term="Workflow" scheme="https://tobenot.github.io/categories/Workflow/"/>
    
    
    <category term="Workflow" scheme="https://tobenot.github.io/tags/Workflow/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
  </entry>
  
  <entry>
    <title>COT——思维链的极限</title>
    <link href="https://tobenot.github.io/2024/09/22/Dev-Think-Limits-Of-COT/"/>
    <id>https://tobenot.github.io/2024/09/22/Dev-Think-Limits-Of-COT/</id>
    <published>2024-09-22T14:00:24.000Z</published>
    <updated>2025-04-09T14:59:05.996Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><p>在大模型领域,COT(Chain of Thought,思维链)技术是提示词工程的常见方法.<br>简单来说就是多想几步。<br>一个常见COT示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">思考过程：</span><br><span class="line">   a. 理解问题：仔细阅读问题描述，确保完全理解问题的要求和给定的信息。</span><br><span class="line">   b. 分解问题：将复杂问题拆分成更小、更容易管理的子问题。</span><br><span class="line">   c. 制定策略：根据问题的性质和已知信息，选择合适的解决方法或算法。</span><br><span class="line">   d. 执行计划：按照制定的策略逐步解决问题，记录每一步的推理过程。</span><br><span class="line">   e. 验证结果：检查最终答案是否符合问题要求，并回顾整个解决过程是否合理。</span><br></pre></td></tr></table></figure><p>如果不使用COT的话，相当于：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">思考过程：</span><br><span class="line">   a. 输出答案：写吧</span><br></pre></td></tr></table></figure><p>不用说，使用长COT肯定是能提升智力的，相对的回复速度和消耗的tokens量会增大<br>用时间换质量</p><h2 id="COT的优势与局限"><a href="#COT的优势与局限" class="headerlink" title="COT的优势与局限"></a>COT的优势与局限</h2><p>COT允许AI模型像人类一样,通过步骤化思考来解决复杂问题。这种方法在数学推理、逻辑分析等领域表现出色。但是,COT也面临着以下限制:</p><ol><li>复杂性瓶颈: COT能提升的智力也是有限的，每个模型的注意力就那么多，想太多会忘事，人类尚且如此。<a href="https://arxiv.org/abs/1706.03762">Attention Is All You Need</a>。</li><li>领域局限性: 有些问题上COT也难解决，比如计算准确性，不可能让大模型直接做数学运算，或者位运算。</li><li>错误累积: 长链推理中的微小错误可能会在后续步骤中被放大,导致最终结果偏离正确答案。</li></ol><p>为什么写这篇文章呢？<br>因为我在做Beyond Books，有个特殊事件触发，我想下放给每个Agent自己去判断，结果发现在评估条件、触发条件上，角色就像是决策带宽已经占满了，就做不好，特别是数学敏感的条件。<br>其实也就是Agent自己思考的COT已经带宽不够了，只是它还限于文学性的时候问题还没暴露出来。</p><p>但是事实上我感觉不对<br>好像是我对“特殊事件”的理解与大模型不同，它不是一个阶段性的东西，而是一个触发式的东西，就是到达条件，就加点什么影响因素进来。它不是一个持续性的东西，而大模型可能认为需要进行阶段管理，所以它会迟迟不肯触发事件。specialEvents</p><p>和sonnet的对话记录：<br>我发现大模型很难理解这个“特殊事件触发”的逻辑，对于COT里面的currentProgress经常牛头不对马嘴</p><p>我理解您的担忧。确实，大模型可能在处理复杂的逻辑结构时会遇到困难，尤其是在理解和生成特定格式的数据时。针对这个问题，我们可以对代码进行一些调整，以简化逻辑并提高模型的理解能力。以下是一些建议：<br>。。。<br>特殊事件列表：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$&#123;specialEvents.<span class="title function_">filter</span>(<span class="function"><span class="params">event</span> =&gt;</span> !event.<span class="property">consumed</span>).<span class="title function_">map</span>(<span class="function"><span class="params">event</span> =&gt;</span> <span class="string">`</span></span><br><span class="line"><span class="string">- ID: <span class="subst">$&#123;event.id&#125;</span></span></span><br><span class="line"><span class="string">  触发条件: <span class="subst">$&#123;event.triggerCondition&#125;</span></span></span><br><span class="line"><span class="string">  当前进度: [未开始/进行中/即将触发/已触发]（请选择一个）`</span>).<span class="title function_">join</span>(<span class="string">&#x27;\n&#x27;</span>)&#125;</span><br></pre></td></tr></table></figure><p>。。。<br>我们简化了currentProgress的描述，使用更直观的状态描述，如”未开始”、”进行中”、”即将触发”和”已触发”。</p><p>实际上我这些事件是单次触发式的，不是一个有阶段管理需求的东西。更像是“到了这个条件，就添加一些新内容进来”这种逻辑，我是不是命名让人误解了？</p><p>然后我发现<br>我把specialEvents的命名改成plotTriggers<br>bug就修好了，大模型突然理解currentProgress要填“触发条件满足的进度”了<br><a href="/img/Dev-Think-Limits-Of-COT/Image-Dev-Think-Limits-Of-COT.png" class="gallery-item" style="box-shadow: none;"> <img src="/img/Dev-Think-Limits-Of-COT/Image-Dev-Think-Limits-Of-COT.png" width="300"></a></p><p>类似问题还有：<br>大模型觉得时停抗性：无 是“不被时停影响”</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;p&gt;在大模型领域,COT(Chain of Thought,思维链)技术是提示词工程的常见方法.&lt;br&gt;简单来说就是多想几步。&lt;br&gt;一个常见COT示例：&lt;/p&gt;
&lt;figure class=&quot;highlight js</summary>
      
    
    
    
    <category term="LLM" scheme="https://tobenot.github.io/categories/LLM/"/>
    
    
    <category term="LLM" scheme="https://tobenot.github.io/tags/LLM/"/>
    
    <category term="AI思维" scheme="https://tobenot.github.io/tags/AI%E6%80%9D%E7%BB%B4/"/>
    
    <category term="技术探讨" scheme="https://tobenot.github.io/tags/%E6%8A%80%E6%9C%AF%E6%8E%A2%E8%AE%A8/"/>
    
    <category term="COT" scheme="https://tobenot.github.io/tags/COT/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
  </entry>
  
  <entry>
    <title>JS大模型基础实践(含Structured Outputs)</title>
    <link href="https://tobenot.github.io/2024/09/22/Tutorial-LLM-Practice-JS/"/>
    <id>https://tobenot.github.io/2024/09/22/Tutorial-LLM-Practice-JS/</id>
    <published>2024-09-22T08:34:36.000Z</published>
    <updated>2025-04-27T12:28:51.930Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h1 id="JS大模型基础实践-含Structured-Outputs"><a href="#JS大模型基础实践-含Structured-Outputs" class="headerlink" title="JS大模型基础实践(含Structured Outputs)"></a>JS大模型基础实践(含Structured Outputs)</h1><h2 id="1-引言"><a href="#1-引言" class="headerlink" title="1. 引言"></a>1. 引言</h2><p>昨天在做<a href="https://tobenot.top/Beyond-Books/">Beyond Books 不止于纸上的故事</a>的多Agent、流式返回、<a href="https://platform.openai.com/docs/guides/structured-outputs/introduction">Structured Outputs（结构化输出）</a>的时候（现在还在分支开发，没提主干），在网上找了好久。<br>所以在此留下一些很标准的JS的GPT调用代码。<br>传统的、流式、json、结构化输出都有。</p><h2 id="2-环境准备"><a href="#2-环境准备" class="headerlink" title="2. 环境准备"></a>2. 环境准备</h2><ul><li>纯html，有个浏览器就行。新建一个文件夹，改后缀html，往里面塞示例代码，填入API Key和地址之后双击html就能用。</li><li>只要扔给AI，就可以方便地写进其他项目里，比如我的<a href="https://tobenot.top/Beyond-Books/">Beyond Books 不止于纸上的故事</a></li></ul><h2 id="3-如果你还没有大模型API"><a href="#3-如果你还没有大模型API" class="headerlink" title="3. 如果你还没有大模型API"></a>3. 如果你还没有大模型API</h2><p>这篇给你准备了超新手的教程</p><ul><li>选择合适的LLM服务提供商<ul><li>官方<ul><li>比较麻烦</li></ul></li><li>第三方 <a href="https://deepbricks.ai/">https://deepbricks.ai/</a><ul><li>比较便宜，但比较慢</li></ul></li></ul></li><li>拿到API keys就可以玩了</li><li>下面的示例中，把YOUR_API_KEY替换为你的API_KEY，把YOUR_API_URL替换为你的API_URL<br>有啥坑：比如这家 <a href="https://www.gptapi.us/register?aff=qrbV">gptapi</a> CORS没配置好，本地以及一些自部署的环境API连接不到它<br>而且它还不支持流式</li></ul><p>注：官方API文档 <a href="https://platform.openai.com/docs/api-reference/chat/create">https://platform.openai.com/docs/api-reference/chat/create</a></p><h2 id="4-介绍与示例"><a href="#4-介绍与示例" class="headerlink" title="4. 介绍与示例"></a>4. 介绍与示例</h2><h3 id="传统"><a href="#传统" class="headerlink" title="传统"></a>传统</h3><p>就是你来我往的整块回复。<br>用习惯网页端的朋友们注意了，API基本都是无状态的，不会维护会话历史，这历史从来都是自己存的。<br>网页端只是帮忙存而已。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>OpenAI 聊天<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123; <span class="attribute">font-family</span>: Arial, sans-serif; <span class="attribute">max-width</span>: <span class="number">800px</span>; <span class="attribute">margin</span>: <span class="number">0</span> auto; <span class="attribute">padding</span>: <span class="number">20px</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#chat</span> &#123; <span class="attribute">height</span>: <span class="number">400px</span>; <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>; <span class="attribute">overflow-y</span>: scroll; <span class="attribute">padding</span>: <span class="number">10px</span>; <span class="attribute">margin-bottom</span>: <span class="number">10px</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#userInput</span> &#123; <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">padding</span>: <span class="number">5px</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#sendButton</span> &#123; <span class="attribute">margin-top</span>: <span class="number">10px</span>; &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>OpenAI 聊天<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;chat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userInput&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入您的消息...&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;sendButton&quot;</span>&gt;</span>发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> chatDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;chat&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> userInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;userInput&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> sendButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;sendButton&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 请在这里替换为您的 OpenAI API 密钥</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">API_KEY</span> = <span class="variable constant_">YOUR_API_KEY</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">API_URL</span> = <span class="variable constant_">YOUR_API_URL</span> + <span class="string">&quot;/v1/chat/completions&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">MODEL</span> = <span class="string">&#x27;gpt-4o-mini&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        sendButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, sendMessage);</span></span><br><span class="line"><span class="language-javascript">        userInput.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keypress&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (e.<span class="property">key</span> === <span class="string">&#x27;Enter&#x27;</span>) <span class="title function_">sendMessage</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">class</span> <span class="title class_">AIService</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">static</span> <span class="keyword">async</span> <span class="title function_">callLargeLanguageModel</span>(<span class="params">prompt</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 开始调用大语言模型，提示词: <span class="subst">$&#123;prompt&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] API_URL: <span class="subst">$&#123;API_URL&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] MODEL: <span class="subst">$&#123;MODEL&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                </span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> requestBody = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; </span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">model</span>: <span class="variable constant_">MODEL</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">messages</span>: [&#123; <span class="attr">role</span>: <span class="string">&quot;user&quot;</span>, <span class="attr">content</span>: prompt &#125;],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">max_tokens</span>: <span class="number">1000</span></span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 请求体: <span class="subst">$&#123;requestBody&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 发送API请求...`</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_URL</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">headers</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`Bearer <span class="subst">$&#123;API_KEY&#125;</span>`</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">body</span>: requestBody,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 收到API响应，状态码: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`[ERROR] API请求失败: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`API 请求失败: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] API响应数据: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(data)&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> content = data.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">message</span>.<span class="property">content</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 模型返回内容长度: <span class="subst">$&#123;content.length&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> content;</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`[ERROR] 调用大语言模型时发生错误: <span class="subst">$&#123;error.message&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">throw</span> error;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">sendMessage</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> message = userInput.<span class="property">value</span>.<span class="title function_">trim</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (message) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">appendMessage</span>(<span class="string">&#x27;用户: &#x27;</span> + message);</span></span><br><span class="line"><span class="language-javascript">                userInput.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title class_">AIService</span>.<span class="title function_">callLargeLanguageModel</span>(message);</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">appendMessage</span>(<span class="string">&#x27;助手: &#x27;</span> + response);</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;错误:&#x27;</span>, error);</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">appendMessage</span>(<span class="string">&#x27;助手: 抱歉，发生了错误。&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">appendMessage</span>(<span class="params">message</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> messageDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            messageDiv.<span class="property">textContent</span> = message;</span></span><br><span class="line"><span class="language-javascript">            chatDiv.<span class="title function_">appendChild</span>(messageDiv);</span></span><br><span class="line"><span class="language-javascript">            chatDiv.<span class="property">scrollTop</span> = chatDiv.<span class="property">scrollHeight</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="流式"><a href="#流式" class="headerlink" title="流式"></a>流式</h3><p>比较丝滑，可以在响应的一开始就开始显示。<br>问题就是不太能json格式化解析，适合做思维链的最后一个显示端。<br>就是到最后一步的时候不用json格式解析了，就让GPT流式返回。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>OpenAI 流式回复聊天<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123; <span class="attribute">font-family</span>: Arial, sans-serif; <span class="attribute">max-width</span>: <span class="number">800px</span>; <span class="attribute">margin</span>: <span class="number">0</span> auto; <span class="attribute">padding</span>: <span class="number">20px</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#chat</span> &#123; <span class="attribute">height</span>: <span class="number">400px</span>; <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>; <span class="attribute">overflow-y</span>: scroll; <span class="attribute">padding</span>: <span class="number">10px</span>; <span class="attribute">margin-bottom</span>: <span class="number">10px</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#userInput</span> &#123; <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">padding</span>: <span class="number">5px</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#sendButton</span> &#123; <span class="attribute">margin-top</span>: <span class="number">10px</span>; &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>OpenAI 流式回复聊天<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;chat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userInput&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入您的消息...&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;sendButton&quot;</span>&gt;</span>发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> chatDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;chat&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> userInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;userInput&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> sendButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;sendButton&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 请在这里替换为您的 OpenAI API 密钥</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">OPENAI_API_KEY</span> = <span class="variable constant_">YOUR_API_KEY</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        sendButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, sendMessage);</span></span><br><span class="line"><span class="language-javascript">        userInput.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keypress&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (e.<span class="property">key</span> === <span class="string">&#x27;Enter&#x27;</span>) <span class="title function_">sendMessage</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">sendMessage</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> message = userInput.<span class="property">value</span>.<span class="title function_">trim</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (message) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">appendMessage</span>(<span class="string">&#x27;用户: &#x27;</span> + message);</span></span><br><span class="line"><span class="language-javascript">                userInput.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">YOUR_API_URL</span> + <span class="string">&quot;/v1/chat/completions&quot;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">headers</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`Bearer <span class="subst">$&#123;OPENAI_API_KEY&#125;</span>`</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">model</span>: <span class="string">&#x27;gpt-3.5-turbo&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">messages</span>: [&#123; <span class="attr">role</span>: <span class="string">&#x27;user&#x27;</span>, <span class="attr">content</span>: message &#125;],</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">stream</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;)</span></span><br><span class="line"><span class="language-javascript">                    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> reader = response.<span class="property">body</span>.<span class="title function_">getReader</span>();</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> decoder = <span class="keyword">new</span> <span class="title class_">TextDecoder</span>(<span class="string">&#x27;utf-8&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> buffer = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> assistantResponse = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">const</span> &#123; done, value &#125; = <span class="keyword">await</span> reader.<span class="title function_">read</span>();</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">if</span> (done) <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                        buffer += decoder.<span class="title function_">decode</span>(value, &#123;<span class="attr">stream</span>: <span class="literal">true</span>&#125;);</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">const</span> lines = buffer.<span class="title function_">split</span>(<span class="string">&#x27;\n&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                        </span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; lines.<span class="property">length</span> - <span class="number">1</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="keyword">const</span> line = lines[i];</span></span><br><span class="line"><span class="language-javascript">                            <span class="keyword">if</span> (line.<span class="title function_">startsWith</span>(<span class="string">&#x27;data: &#x27;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="keyword">const</span> jsonStr = line.<span class="title function_">slice</span>(<span class="number">6</span>);</span></span><br><span class="line"><span class="language-javascript">                                <span class="keyword">if</span> (jsonStr === <span class="string">&#x27;[DONE]&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                                <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(jsonStr);</span></span><br><span class="line"><span class="language-javascript">                                    <span class="keyword">if</span> (data.<span class="property">choices</span> &amp;&amp; data.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">delta</span>.<span class="property">content</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                                        assistantResponse += data.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">delta</span>.<span class="property">content</span>;</span></span><br><span class="line"><span class="language-javascript">                                        <span class="title function_">updateAssistantMessage</span>(assistantResponse);</span></span><br><span class="line"><span class="language-javascript">                                    &#125;</span></span><br><span class="line"><span class="language-javascript">                                &#125; <span class="keyword">catch</span> (e) &#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;JSON解析错误:&#x27;</span>, e);</span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                        buffer = lines[lines.<span class="property">length</span> - <span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;错误:&#x27;</span>, error);</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">appendMessage</span>(<span class="string">&#x27;助手: 抱歉，发生了错误。&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">appendMessage</span>(<span class="params">message</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> messageDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            messageDiv.<span class="property">textContent</span> = message;</span></span><br><span class="line"><span class="language-javascript">            chatDiv.<span class="title function_">appendChild</span>(messageDiv);</span></span><br><span class="line"><span class="language-javascript">            chatDiv.<span class="property">scrollTop</span> = chatDiv.<span class="property">scrollHeight</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">updateAssistantMessage</span>(<span class="params">message</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> lastMessage = chatDiv.<span class="property">lastElementChild</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (lastMessage &amp;&amp; lastMessage.<span class="property">textContent</span>.<span class="title function_">startsWith</span>(<span class="string">&#x27;助手: &#x27;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">                lastMessage.<span class="property">textContent</span> = <span class="string">&#x27;助手: &#x27;</span> + message;</span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">appendMessage</span>(<span class="string">&#x27;助手: &#x27;</span> + message);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            chatDiv.<span class="property">scrollTop</span> = chatDiv.<span class="property">scrollHeight</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="json"><a href="#json" class="headerlink" title="json"></a>json</h3><p>古老的json格式化回复，问题是有时候不太遵循，可能会漏字段，或者字段顺序乱了。<br>特别是多轮对话的时候，GPT很容易被对话历史带跑，对于压缩的对话历史就更是如此了。<br>现在有了结构化输出，一般都不用这个json模式了。<br>更古老的时候没有response_format: { type: “json_object” }，它甚至连json格式都不太能正确了，还得修复（比如冷不防起手三个反引号）。<br>现在好像sonnet那些模型支持json很麻烦。如果你在使用一个没有json模式的模型，可以在思维链后面接上4o-mini的结构化输出。</p><p>这示例里是解析出了display，所以看着还跟传统的一样，你可以问ai怎么加字段，比如加个好感度变化什么的就能做虚拟恋人了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>OpenAI JSON格式回复聊天<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123; <span class="attribute">font-family</span>: Arial, sans-serif; <span class="attribute">max-width</span>: <span class="number">800px</span>; <span class="attribute">margin</span>: <span class="number">0</span> auto; <span class="attribute">padding</span>: <span class="number">20px</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#chat</span> &#123; <span class="attribute">height</span>: <span class="number">400px</span>; <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>; <span class="attribute">overflow-y</span>: scroll; <span class="attribute">padding</span>: <span class="number">10px</span>; <span class="attribute">margin-bottom</span>: <span class="number">10px</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#userInput</span> &#123; <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">padding</span>: <span class="number">5px</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#sendButton</span> &#123; <span class="attribute">margin-top</span>: <span class="number">10px</span>; &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>OpenAI JSON格式回复聊天<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;chat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userInput&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入您的消息...&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;sendButton&quot;</span>&gt;</span>发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> chatDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;chat&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> userInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;userInput&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> sendButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;sendButton&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">API_KEY</span> = <span class="variable constant_">YOUR_API_KEY</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">API_URL</span> = <span class="variable constant_">YOUR_API_URL</span> + <span class="string">&quot;/v1/chat/completions&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">MODEL</span> = <span class="string">&#x27;gpt-4o-mini&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">SYSTEM_PROMPT</span> = <span class="string">&quot;你是一个友好的AI助手。请以JSON格式回复，包含&#x27;display&#x27;字段用于显示给用户的内容。&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        sendButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, sendMessage);</span></span><br><span class="line"><span class="language-javascript">        userInput.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keypress&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (e.<span class="property">key</span> === <span class="string">&#x27;Enter&#x27;</span>) <span class="title function_">sendMessage</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">class</span> <span class="title class_">AIService</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">static</span> <span class="keyword">async</span> <span class="title function_">callLargeLanguageModel</span>(<span class="params">userMessage</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 开始调用大语言模型，用户消息: <span class="subst">$&#123;userMessage&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] API_URL: <span class="subst">$&#123;API_URL&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] MODEL: <span class="subst">$&#123;MODEL&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                </span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> requestBody = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; </span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">model</span>: <span class="variable constant_">MODEL</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">messages</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123; <span class="attr">role</span>: <span class="string">&quot;system&quot;</span>, <span class="attr">content</span>: <span class="variable constant_">SYSTEM_PROMPT</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                        &#123; <span class="attr">role</span>: <span class="string">&quot;user&quot;</span>, <span class="attr">content</span>: userMessage &#125;</span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">max_tokens</span>: <span class="number">1000</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">response_format</span>: &#123; <span class="attr">type</span>: <span class="string">&quot;json_object&quot;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 请求体: <span class="subst">$&#123;requestBody&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 发送API请求...`</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_URL</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">headers</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`Bearer <span class="subst">$&#123;API_KEY&#125;</span>`</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">body</span>: requestBody,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">credentials</span>: <span class="string">&#x27;include&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 收到API响应，状态码: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`[ERROR] API请求失败: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`API 请求失败: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] API响应数据: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(data)&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> content = data.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">message</span>.<span class="property">content</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 模型返回内容长度: <span class="subst">$&#123;content.length&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">parse</span>(content);</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`[ERROR] 调用大语言模型时发生错误: <span class="subst">$&#123;error.message&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">throw</span> error;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">sendMessage</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> message = userInput.<span class="property">value</span>.<span class="title function_">trim</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (message) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">appendMessage</span>(<span class="string">&#x27;用户: &#x27;</span> + message);</span></span><br><span class="line"><span class="language-javascript">                userInput.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title class_">AIService</span>.<span class="title function_">callLargeLanguageModel</span>(message);</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">appendMessage</span>(<span class="string">&#x27;助手: &#x27;</span> + response.<span class="property">display</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;错误:&#x27;</span>, error);</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">appendMessage</span>(<span class="string">&#x27;助手: 抱歉，发生了错误。&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">appendMessage</span>(<span class="params">message</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> messageDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            messageDiv.<span class="property">textContent</span> = message;</span></span><br><span class="line"><span class="language-javascript">            chatDiv.<span class="title function_">appendChild</span>(messageDiv);</span></span><br><span class="line"><span class="language-javascript">            chatDiv.<span class="property">scrollTop</span> = chatDiv.<span class="property">scrollHeight</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="结构化输出"><a href="#结构化输出" class="headerlink" title="结构化输出"></a>结构化输出</h3><p>结构化输出能保证输出是json格式，完全符合你定义的schema的json格式。<br>输出的顺序也是确定的按照你key给的顺序。</p><p>Open AI的伟大发明。<a href="https://platform.openai.com/docs/guides/structured-outputs/introduction">文档链接</a>。<br>这个只有4o和4o-mini能用。4tubro那些还是只能用json模式。<br>o1不支持，o1它是个Agent，连json模式都不支持。</p><p>有个坑，description不会影响输出，纯纯是给你看的注释<br>已经试过了，你可以试试</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">TEST_SCHEMA</span> = &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;object&quot;</span>,</span><br><span class="line">    <span class="attr">properties</span>: &#123;</span><br><span class="line">        <span class="attr">test</span>: &#123; </span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;string&quot;</span>,</span><br><span class="line">            <span class="attr">description</span>: <span class="string">&quot;在这个字段，你必须输出“在测试哦”。&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">required</span>: [<span class="string">&quot;test&quot;</span>],</span><br><span class="line">    <span class="attr">additionalProperties</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后看它瞎回复。</p><p>下面其实是官方示例的JavaScript版。可以问AI改成别的，或者拿着这个去改造古老的json模式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>OpenAI 结构化输出聊天<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123; <span class="attribute">font-family</span>: Arial, sans-serif; <span class="attribute">max-width</span>: <span class="number">800px</span>; <span class="attribute">margin</span>: <span class="number">0</span> auto; <span class="attribute">padding</span>: <span class="number">20px</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#chat</span> &#123; <span class="attribute">height</span>: <span class="number">400px</span>; <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>; <span class="attribute">overflow-y</span>: scroll; <span class="attribute">padding</span>: <span class="number">10px</span>; <span class="attribute">margin-bottom</span>: <span class="number">10px</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#userInput</span> &#123; <span class="attribute">width</span>: <span class="number">100%</span>; <span class="attribute">padding</span>: <span class="number">5px</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#sendButton</span> &#123; <span class="attribute">margin-top</span>: <span class="number">10px</span>; &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>OpenAI 结构化输出聊天<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;chat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userInput&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入您的消息...&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;sendButton&quot;</span>&gt;</span>发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> chatDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;chat&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> userInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;userInput&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> sendButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;sendButton&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">API_KEY</span> = <span class="variable constant_">YOUR_API_KEY</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">API_URL</span> = <span class="variable constant_">YOUR_API_URL</span> + <span class="string">&quot;/v1/chat/completions&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">MODEL</span> = <span class="string">&#x27;gpt-4o-mini&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">SYSTEM_PROMPT</span> = <span class="string">&quot;你是一个友好的数学辅导员。请逐步引导用户解决问题。&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> <span class="variable constant_">OUTPUT_SCHEMA</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="string">&quot;object&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">properties</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">steps</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>: <span class="string">&quot;array&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">items</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">type</span>: <span class="string">&quot;object&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">properties</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">explanation</span>: &#123; <span class="attr">type</span>: <span class="string">&quot;string&quot;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">output</span>: &#123; <span class="attr">type</span>: <span class="string">&quot;string&quot;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">                        &#125;,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">required</span>: [<span class="string">&quot;explanation&quot;</span>, <span class="string">&quot;output&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">additionalProperties</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">final_answer</span>: &#123; <span class="attr">type</span>: <span class="string">&quot;string&quot;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">required</span>: [<span class="string">&quot;steps&quot;</span>, <span class="string">&quot;final_answer&quot;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">additionalProperties</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        sendButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, sendMessage);</span></span><br><span class="line"><span class="language-javascript">        userInput.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keypress&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (e.<span class="property">key</span> === <span class="string">&#x27;Enter&#x27;</span>) <span class="title function_">sendMessage</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">class</span> <span class="title class_">AIService</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">static</span> <span class="keyword">async</span> <span class="title function_">callLargeLanguageModel</span>(<span class="params">userMessage</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 开始调用大语言模型，用户消息: <span class="subst">$&#123;userMessage&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] API_URL: <span class="subst">$&#123;API_URL&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] MODEL: <span class="subst">$&#123;MODEL&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                </span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> requestBody = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; </span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">model</span>: <span class="variable constant_">MODEL</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">messages</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123; <span class="attr">role</span>: <span class="string">&quot;system&quot;</span>, <span class="attr">content</span>: <span class="variable constant_">SYSTEM_PROMPT</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                        &#123; <span class="attr">role</span>: <span class="string">&quot;user&quot;</span>, <span class="attr">content</span>: userMessage &#125;</span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">response_format</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">type</span>: <span class="string">&quot;json_schema&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">json_schema</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">name</span>: <span class="string">&quot;math_response&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">schema</span>: <span class="variable constant_">OUTPUT_SCHEMA</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">strict</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 请求体: <span class="subst">$&#123;requestBody&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 发送API请求...`</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_URL</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">headers</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`Bearer <span class="subst">$&#123;API_KEY&#125;</span>`</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">body</span>: requestBody</span></span><br><span class="line"><span class="language-javascript">                    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 收到API响应，状态码: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`[ERROR] API请求失败: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`API 请求失败: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] API响应数据: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(data)&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> content = data.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">message</span>.<span class="property">content</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`[DEBUG] 模型返回内容长度: <span class="subst">$&#123;content.length&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">parse</span>(content);</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`[ERROR] 调用大语言模型时发生错误: <span class="subst">$&#123;error.message&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">throw</span> error;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">sendMessage</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> message = userInput.<span class="property">value</span>.<span class="title function_">trim</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (message) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">appendMessage</span>(<span class="string">&#x27;用户: &#x27;</span> + message);</span></span><br><span class="line"><span class="language-javascript">                userInput.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title class_">AIService</span>.<span class="title function_">callLargeLanguageModel</span>(message);</span></span><br><span class="line"><span class="language-javascript">                    </span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 显示解题步骤</span></span></span><br><span class="line"><span class="language-javascript">                    response.<span class="property">steps</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">step, index</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">appendMessage</span>(<span class="string">`步骤 <span class="subst">$&#123;index + <span class="number">1</span>&#125;</span>:`</span>);</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">appendMessage</span>(<span class="string">`解释: <span class="subst">$&#123;step.explanation&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                        <span class="title function_">appendMessage</span>(<span class="string">`结果: <span class="subst">$&#123;step.output&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                    &#125;);</span></span><br><span class="line"><span class="language-javascript">                    </span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 显示最终答案</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">appendMessage</span>(<span class="string">&#x27;最终答案: &#x27;</span> + response.<span class="property">final_answer</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;错误:&#x27;</span>, error);</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">appendMessage</span>(<span class="string">&#x27;助手: 抱歉，发生了错误。&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">appendMessage</span>(<span class="params">message</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> messageDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            messageDiv.<span class="property">textContent</span> = message;</span></span><br><span class="line"><span class="language-javascript">            chatDiv.<span class="title function_">appendChild</span>(messageDiv);</span></span><br><span class="line"><span class="language-javascript">            chatDiv.<span class="property">scrollTop</span> = chatDiv.<span class="property">scrollHeight</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>functionCall请见<a href="https://tobenot.top/2024/01/27/Tutorial-LLM-Foundation/">大模型基础技术学习</a><br>主要是我不喜欢functionCall，因为结构化输出可以和数据交互，够用了，而且functionCall双倍tokens。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h1 id=&quot;JS大模型基础实践-含Structured-Outputs&quot;&gt;&lt;a href=&quot;#JS大模型基础实践-含Structured-Outputs&quot; class=&quot;headerlink&quot; title=&quot;JS大模</summary>
      
    
    
    
    <category term="LLM" scheme="https://tobenot.github.io/categories/LLM/"/>
    
    
    <category term="LLM" scheme="https://tobenot.github.io/tags/LLM/"/>
    
    <category term="技术" scheme="https://tobenot.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="GPT" scheme="https://tobenot.github.io/tags/GPT/"/>
    
    <category term="JavaScript" scheme="https://tobenot.github.io/tags/JavaScript/"/>
    
    <category term="实践" scheme="https://tobenot.github.io/tags/%E5%AE%9E%E8%B7%B5/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
    <category term="article" scheme="https://tobenot.github.io/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>Vercel部署</title>
    <link href="https://tobenot.github.io/2024/07/12/Tutorial-Vercel/"/>
    <id>https://tobenot.github.io/2024/07/12/Tutorial-Vercel/</id>
    <published>2024-07-11T16:25:00.000Z</published>
    <updated>2025-04-09T15:06:23.080Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h2><h3 id="Vercel-部署失败问题"><a href="#Vercel-部署失败问题" class="headerlink" title="Vercel 部署失败问题"></a>Vercel 部署失败问题</h3><p>部署失败时，可以使用 <code>vercel --prod</code> 命令在命令行查看问题。</p><h3 id="更换-Vercel-的地址到自己的"><a href="#更换-Vercel-的地址到自己的" class="headerlink" title="更换 Vercel 的地址到自己的"></a>更换 Vercel 的地址到自己的</h3><ol><li><p>访问 GName 官网 <a href="https://www.gname.com/user#/admin_ym">My Domains - GNAME control panel</a>。</p></li><li><p>在解析设置中添加一条记录：</p><ul><li>名称：anthurium（可以自定义）</li><li>类型：CNAME（实测 A 记录也行，但官方建议使用 CNAME）</li><li>值：<code>vercel.com</code> 或 <code>76.76.21.21</code></li></ul></li><li><p>在 Vercel 的部署服务器面板中，进入 <code>Settings</code> -&gt; <code>Domains</code>，假设域名是 <code>tobenot.top</code>，解析名是 <code>anthurium</code>，那么就添加一个 <code>anthurium.tobenot.top</code>。</p></li></ol><p>这样就可以将原本你使用的 Vercel 服务器地址都换成这个新的地址了。</p><h3 id="Vercel流式响应"><a href="#Vercel流式响应" class="headerlink" title="Vercel流式响应"></a>Vercel流式响应</h3><h4 id="非流式响应的代码"><a href="#非流式响应的代码" class="headerlink" title="非流式响应的代码"></a>非流式响应的代码</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>: req.<span class="property">method</span>,</span><br><span class="line">    <span class="attr">url</span>: targetUrl,</span><br><span class="line">    <span class="attr">headers</span>: headers,</span><br><span class="line">    <span class="attr">data</span>: req.<span class="property">body</span></span><br><span class="line">&#125;);</span><br><span class="line">res.<span class="title function_">status</span>(response.<span class="property">status</span>).<span class="title function_">json</span>(response.<span class="property">data</span>);</span><br></pre></td></tr></table></figure><h4 id="流式响应的代码"><a href="#流式响应的代码" class="headerlink" title="流式响应的代码"></a>流式响应的代码</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查是否请求流式响应</span></span><br><span class="line"><span class="keyword">if</span> (req.<span class="property">body</span> &amp;&amp; req.<span class="property">body</span>.<span class="property">stream</span> === <span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="comment">// 设置响应头</span></span><br><span class="line">    res.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/event-stream&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建到目标的请求</span></span><br><span class="line">    <span class="keyword">const</span> response =<span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">        <span class="attr">method</span>: req.<span class="property">method</span>,</span><br><span class="line">        <span class="attr">url</span>: targetUrl,</span><br><span class="line">        <span class="attr">headers</span>: headers,</span><br><span class="line">        <span class="attr">data</span>: req.<span class="property">body</span>,</span><br><span class="line">        <span class="attr">responseType</span>: <span class="string">&#x27;stream&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将流数据传输到客户端</span></span><br><span class="line">    response.<span class="property">data</span>.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">        res.<span class="title function_">write</span>(chunk);</span><br><span class="line">    &#125;);</span><br><span class="line">    response.<span class="property">data</span>.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        res.<span class="title function_">end</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 非流式请求的处理保持不变</span></span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">        <span class="attr">method</span>: req.<span class="property">method</span>,</span><br><span class="line">        <span class="attr">url</span>: targetUrl,</span><br><span class="line">        <span class="attr">headers</span>: headers,</span><br><span class="line">        <span class="attr">data</span>: req.<span class="property">body</span></span><br><span class="line">    &#125;);</span><br><span class="line">    res.<span class="title function_">status</span>(response.<span class="property">status</span>).<span class="title function_">json</span>(response.<span class="property">data</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;Vercel&quot;&gt;&lt;a href=&quot;#Vercel&quot; class=&quot;headerlink&quot; title=&quot;Vercel&quot;&gt;&lt;/a&gt;Vercel&lt;/h2&gt;&lt;h3 id=&quot;Vercel-部署失败问题&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="技术" scheme="https://tobenot.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="技术" scheme="https://tobenot.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="碎片" scheme="https://tobenot.github.io/tags/%E7%A2%8E%E7%89%87/"/>
    
    <category term="Vercel" scheme="https://tobenot.github.io/tags/Vercel/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
  </entry>
  
  <entry>
    <title>在回家之前到家</title>
    <link href="https://tobenot.github.io/2024/06/28/Story-Arrive-Before-Go-Home/"/>
    <id>https://tobenot.github.io/2024/06/28/Story-Arrive-Before-Go-Home/</id>
    <published>2024-06-28T10:41:11.000Z</published>
    <updated>2025-04-09T15:04:31.075Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h1 id="在回家之前到家"><a href="#在回家之前到家" class="headerlink" title="在回家之前到家"></a>在回家之前到家</h1><p><strong>作者：苏敬峰</strong></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><em>2018年3月10日快速手写于周记本。写作灵感是从机房走出时外面的叶子常常会打到身上。在整理为电子版时无修改。</em><br><em>2024年评价：叶子拍到身上乃大自然之亲吻，为何踢叶子呀！以及不觉得有平行世界，世界只有一个，文中的说法是一种主观感觉。</em><br><em>写的时候也认为这是Beyond Books系列中罗伯特的异能溢出事件，在BB世界观中发生在2008年。</em></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>昨晚，天上的星星异常地排成了好多个正三角形。于是我夜观星象，只看到一幅难以辨读的图像，郁闷。</p><p>今天早起了七分钟，除此以外一切正常，还是像每个平凡的星期六一样，奔机房而写题，苦战于数据之间，还不至于焦头烂额。还在想一道图论题的时候，外面好像有人走过，出于好奇我便开门来看，原来是几片叶子从树上掉过来了。看着树叶的舞动，我一下有了思路，便又回去狂敲代码了。</p><p>写完那题的时候，已经放学过了十分钟了，我收拾完东西离开了机房，突然几片叶子从旁边飞了过来，打到了我的身上，我报复性地踢了它们一脚就走了。到了教室准备拿作业，突然觉得不对，怎么没人出来走廊的？那几个班的老师也没有下课的意思。正疑惑的时候，下课铃又响了一遍。我可不曾记得下课铃还有预备铃这种操作，那是为什么呢？难道说我听错了吗？算了，不管这些尘垢秕糠，回家才是第一要务。</p><p>父亲紧紧盯着校门口，他一看见我，脸上就露出了无比惊讶的表情，那表情就好像我的脸上被用马克笔画了几个大大的圆圈一样。但可以肯定的是，我的脸上没有圆圈，我还是原来的我，顶多只是在超好吃的学生饭堂吃胖了一点点而已，没错，只有一点点！难道父亲现在才发现？</p><p>刚上了车，父亲就急不可耐地说：“我忘记给你带口罩过来了。诶，上次本来说要试试看能不能防晕车的。”不怕，刚刚拿了一张传单，味道挺大的，可以掩盖车里的皮革气味。接下来的一路上，父亲的话极少，他脸上仍有那份惊讶，除此之外，我还看出了恐慌和无助。想必是遇到了什么大事吧。</p><p>我想起了要买周记本的事情。我一跟他说，他的表情又有了微妙的变化。过了很久很久，他才说：“我知道。”于是我更加觉得匪夷所思，但转念一想，没什么，不就是老师告诉他的吗。我继续沉沦在图论题中。</p><p>买完了周记本，马上就到家了，我正满心期待着，可父亲偏偏就减了速。我抱怨似得说：“爸，为什么要慢下来？”我转头看向父亲，马上被吓得不轻。父亲好像被什么惊吓到了，浑身发抖，冷汗直流，脸上的表情凝固了。父亲慢慢指向前方。“看。”我顺着他的手指看过去，看到了一辆极其熟悉的车。我心头一紧，往下看它的车牌号……没错，是同一个车牌号，那一辆车与这一辆车，是同一辆车！</p><p>父亲小声嘀咕着说：“我来的时候……也是这样的……”我往对面的驾驶座上看。那是我的父亲，坐在那辆车上的，也是我的父亲！</p><p>“儿子？”对面摇下车窗喊道。我打开车门下了车，对面也下了车，一步一步地向我走来，他的脸上，充斥着不可名状的恐惧。</p><p>“等等！”这边的“父亲”也下了车，大步向我走来。“冷静，冷静！”当然，我自己也冷静不下来，我的思想飞速运转，千千万万种可能，我想到了一个。我问他们：“现在是多少点？”</p><p>这边想都没想就脱口而出：“十二点七分！”对面迅速地拿出手机看了一下。“十点二十五分。”我看了一下自己的表。“十二点三十四分。”我们三个人一时间说不出来一句话，站在原地面面相觑。</p><p>我回想了一大堆关于时间的理论，然后看了看太阳，下了定论：“我相信我们现在是在十点二十五分的世界里。”对面看起来更手足无措了，小心地问：“那现在怎么办？”这个问题难住我了，我挠挠头，表示我也没什么好想法。</p><p>这边说：“去接他。”接谁？哦，接我，对，接我。我补了一句：“现在那个十点二十五分的我，应该还在被一道难题困扰，正在写一些入门题放松心情呢。”豁然开朗，这是一个时间循环，唯一的解法就是完成它。</p><p>“你应该现在去学校接现在的我回家，我对于你是未来的我。你如果不去接我，谁知道会发生什么？”对面好像懂了，不过还是担心地问：“他，在那里吗？”我早就清楚他会这么问，我也准备好了回答：“只要现在是十点，他就在那里，你可以当作没看到我们，继续你的正常生活。”他呆滞了一下，才点头。“好，好，去接他。去接我的儿子。”他缓缓走回对面的车，又看了我一眼，恍然大悟地说：“啊，我要拿口罩给你。”</p><p>我一下子想起了时间悖论一类可怕的事情，便急了。“别拿，千万别拿！还有一些别的事情，拜托你一定要做！”他更加木然了。我接着说：“第一，你一定要跟他说你是忘记拿口罩了，第二，我会跟你要求买周记本，你一定要说‘我知道’，最后，千万不要谈及这件事！记住了吗？”他思考了很久，点了点头，回到车上去了。</p><p>到家之后，我便感受到了无垠的陌生感。我的钥匙可以打开房门，但是房间里的所有东西都不是我的，而是他的……我对着钟调校好了时间，顺便问父亲一句：“您都经历过了，怎么还是会被吓到？”父亲没有回答。我从他脸上也看出了对这一切的陌生感。我们是这个世界的不速之客，一切的一切都不是我们熟悉的一切。</p><p>父亲意味深长地问我：“你为什么比我多了半个小时？”他的这句话深深地震动了我，这感觉前所未有。我们来自两个世界。现在和我一个世界的，只有我的书包和作业了。我突然对作业充满了亲切感。可是，为什么会多出半个小时呢？我仔细回想，早上多出来的七分钟，在机房听到的踢叶子的声音，打了两遍的放学铃……焦头烂额。</p><p>再看向父亲，发现他脸上多了一种异样的冷静，他如梦初醒，又摆出了以往每周六回到家的满面春风，高兴地说道：“太好啦！汤还是热的呢，我去端汤来给你喝！”</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h1 id=&quot;在回家之前到家&quot;&gt;&lt;a href=&quot;#在回家之前到家&quot; class=&quot;headerlink&quot; title=&quot;在回家之前到家&quot;&gt;&lt;/a&gt;在回家之前到家&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;作者：苏敬峰&lt;/stro</summary>
      
    
    
    
    <category term="小说" scheme="https://tobenot.github.io/categories/%E5%B0%8F%E8%AF%B4/"/>
    
    
    <category term="小说" scheme="https://tobenot.github.io/tags/%E5%B0%8F%E8%AF%B4/"/>
    
    <category term="科幻" scheme="https://tobenot.github.io/tags/%E7%A7%91%E5%B9%BB/"/>
    
    <category term="短篇" scheme="https://tobenot.github.io/tags/%E7%9F%AD%E7%AF%87/"/>
    
    <category term="时间穿梭" scheme="https://tobenot.github.io/tags/%E6%97%B6%E9%97%B4%E7%A9%BF%E6%A2%AD/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
    <category term="article" scheme="https://tobenot.github.io/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>上海之旅</title>
    <link href="https://tobenot.github.io/2024/05/22/Itinerary-ShangHai/"/>
    <id>https://tobenot.github.io/2024/05/22/Itinerary-ShangHai/</id>
    <published>2024-05-22T14:02:13.000Z</published>
    <updated>2025-04-09T15:00:17.583Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>秋招旅行，去上海看二次元（主要）和各种企业。</p><p>时间：2023年11月<br>路线：飞上海，待两天飞回去。</p><p>算是第一次坐飞机去旅游。</p><h2 id="花费"><a href="#花费" class="headerlink" title="花费"></a>花费</h2><table><thead><tr><th>类别</th><th>详情</th><th>金额</th></tr></thead><tbody><tr><td>酒店</td><td>全季</td><td>400&#x2F;晚</td></tr><tr><td>饮食</td><td>大餐</td><td>均百</td></tr><tr><td>饮食</td><td>快餐</td><td>正常一线城市价</td></tr><tr><td>饮食</td><td>饮料</td><td>正常一线城市价</td></tr><tr><td>机票</td><td>深圳-上海</td><td>早上起飞 400</td></tr><tr><td>机票</td><td>上海-深圳</td><td>下午起飞 600</td></tr></tbody></table><h2 id="上海"><a href="#上海" class="headerlink" title="上海"></a>上海</h2><h3 id="行-交通发达，地标集中"><a href="#行-交通发达，地标集中" class="headerlink" title="行-交通发达，地标集中"></a>行-交通发达，地标集中</h3><p>上海的地铁非常发达！想去哪都能坐地铁的。<br>想去的地方很多，预先在高德上收藏了<br>整体来看，地标、二次元店都在黄浦区集中，非常适合一天跑完。<br>科技公司在徐汇区集中。<br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (1).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (1).webp" width="300"></a><br>但是有些地方就离大家很远，时间预算不够只能排除了。<br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (2).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (2).webp" width="300"></a></p><h3 id="行-实际去了的地方"><a href="#行-实际去了的地方" class="headerlink" title="行-实际去了的地方"></a>行-实际去了的地方</h3><p>百联ZX创趣城（二次元圣地，全是二次元店桌游店，细致逛能逛一晚上）<br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (6).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (6).webp" width="300"></a><br>莉莉丝<br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (2)~2.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (2)~2.webp" width="300"></a><br>米哈游（图里的不能参观，另一个可以）<br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (2)~1.webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (2)~1.webp" width="300"></a><br>外滩（民国建筑和江景，江对面是经典的上海地标们））<br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (8).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (8).webp" width="300"></a><br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (9).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (9).webp" width="300"></a><br>国家会展中心（有时候会有漫展的吧）<br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (11).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (11).webp" width="300"></a><br>世博会<br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (4).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (4).webp" width="300"></a><br>国家馆（红色大建筑）<br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (5).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (5).webp" width="300"></a></p><h3 id="行-想去看但没去的地方"><a href="#行-想去看但没去的地方" class="headerlink" title="行-想去看但没去的地方"></a>行-想去看但没去的地方</h3><p>大部分都是没来得及去</p><p>百米香榭、福州路外文书店店<br>迪士尼（远）<br>复旦大学（远）<br>诺布大厦（远）<br>鹰角网络（不给参观）<br>城隍庙<br>上海自然博物馆<br>上海博物馆<br>上海科技馆<br>磁悬浮地铁</p><h3 id="气候"><a href="#气候" class="headerlink" title="气候"></a>气候</h3><p>金秋，穿短袖的季节，有风<br>气候宜人，干湿适中<br>去哪都很舒服</p><h3 id="住"><a href="#住" class="headerlink" title="住"></a>住</h3><p>全季酒店<br>无可挑剔，过来旅行也不泡酒店</p><h2 id="奇遇"><a href="#奇遇" class="headerlink" title="奇遇"></a>奇遇</h2><p>去米哈游刚好遇到了限时活动领周边，刚刚开始，直接领到了一堆周边。<br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (3).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (3).webp" width="300"></a><br>去世博会博物馆刚好遇到莫奈光影展，改规划买票进去看了。（没错图和上面是同一张）<br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (4).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (4).webp" width="300"></a><br>去ZX创趣场刚好遇到《我推的孩子》的联动活动，很喜欢。<br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (7).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (7).webp" width="300"></a><br><a href="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (10).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-ShangHai/Image-Itinerary-ShangHai (10).webp" width="300"></a></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;秋招旅行，去上海看二次元（主要）和各种企业。&lt;/p&gt;
&lt;p&gt;时间：2023年11</summary>
      
    
    
    
    <category term="游记" scheme="https://tobenot.github.io/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://tobenot.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
    <category term="memorial" scheme="https://tobenot.github.io/tags/memorial/"/>
    
  </entry>
  
  <entry>
    <title>海南之旅</title>
    <link href="https://tobenot.github.io/2024/05/17/Itinerary-HaiNan/"/>
    <id>https://tobenot.github.io/2024/05/17/Itinerary-HaiNan/</id>
    <published>2024-05-17T05:44:05.000Z</published>
    <updated>2025-04-09T14:59:53.609Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>毕设旅行，在海南看海 &amp; 做毕设 &amp; 远程修bug。</p><p>时间：2024年夏<br>路线：飞三亚，在三亚旅行两天，去陵水安顿。</p><h2 id="花费"><a href="#花费" class="headerlink" title="花费"></a>花费</h2><table><thead><tr><th>类别</th><th>详情</th><th>金额</th></tr></thead><tbody><tr><td>酒店</td><td>三亚华芳</td><td>130&#x2F;晚</td></tr><tr><td>酒店</td><td>陵水沁禾</td><td>400&#x2F;晚</td></tr><tr><td>饮食</td><td>大餐</td><td>单人200一顿，双人人均150</td></tr><tr><td>饮食</td><td>平常餐</td><td>20一顿</td></tr><tr><td>饮食</td><td>景区附近</td><td>40一顿吃不饱</td></tr><tr><td>饮食</td><td>饮料&#x2F;清补凉</td><td>普遍15-20</td></tr><tr><td>机票</td><td>深圳-三亚</td><td>下午起飞 900</td></tr><tr><td>机票</td><td>三亚-深圳</td><td>下午起飞 1300</td></tr></tbody></table><h2 id="三亚"><a href="#三亚" class="headerlink" title="三亚"></a>三亚</h2><h3 id="吃"><a href="#吃" class="headerlink" title="吃"></a>吃</h3><p>椰梦长廊旁边的椰子鸡，椰子汤底可以免费续杯，服务很好<br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (2).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (2).webp" width="300"></a></p><p>特产清补凉 &#x3D; 酸奶水果捞把酸奶换成椰奶，甜口福利<br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (7).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (7).webp" width="300"></a></p><p>椰梦长廊旁边的虎婆香草鸭，声称是吃海鲜长大的，很香，服务很好<br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (5).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (5).webp" width="300"></a></p><p>三亚这边服务业都很发达。</p><h3 id="住"><a href="#住" class="headerlink" title="住"></a>住</h3><p>三亚华芳酒店</p><blockquote><p>​周围配套很齐，吃的多，也有药店医院便利店<br>附近的羊栏路号称是最繁华的街，很多普通的吃的，不是大餐，但是好吃能饱<br>网很一般，远程工作卡卡的<br>只适合短待，不适合泡酒店</p></blockquote><h3 id="衣"><a href="#衣" class="headerlink" title="衣"></a>衣</h3><p>非常热，但是阴凉的地方很凉快，需要适时躲到阴凉地下。<br>穿防晒衣+打伞会好很多。</p><h3 id="行"><a href="#行" class="headerlink" title="行"></a>行</h3><p>三亚景点不多，但是基本一天只能逛两个点，整体氛围很悠闲慵懒，公共交通不太发达，出门靠打车了。</p><p>走了天涯镇，欧式建筑，配上大海非常美丽，坐着就不想动了。<br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (3).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (3).webp" width="300"></a><br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (4).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (4).webp" width="300"></a></p><p>沿着天涯镇的沙滩处走到天涯海角，很远，建议打车，不过路上能发现和最近的出海处里消费60才能进的网红咖啡厅一样漂亮的地方。<br>天涯海角从门口走到天涯石有不短的距离。石缝之间能看到海，适合拍照。<br>本来想上西岛，但是时间被慵懒和徒步消耗完了。</p><p>椰梦长廊很多人，海里冲上来的东西也多。<br>晚上看不到多少星星。</p><h2 id="陵水清水湾"><a href="#陵水清水湾" class="headerlink" title="陵水清水湾"></a>陵水清水湾</h2><p>海没有三亚的澄澈，带着很多沙子，晴一点就是蓝绿蓝绿的，云多就会显灰。但是清水湾的沙子比三亚的好很多很多，很软，沙滩也比椰梦长廊的宽几倍。人也很少。<br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (14).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (14).webp" width="300"></a></p><p>海水只能冲上来一点小小的贝壳，不过认真捡还是能捡到不少。</p><p>夜景，晚上没那么热，人会多一点，都聚集在最近的地方，走远一点整片海滩都是自己的。<br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (12).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (12).webp" width="300"></a></p><p>白天的沙滩很烫，几乎0人。</p><p>看不到日落，在哪的日落都被大楼挡住了。<br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (15).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (15).webp" width="300"></a></p><p>浪有时候很大很大。<br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (13).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (13).webp" width="300"></a></p><h3 id="吃-1"><a href="#吃-1" class="headerlink" title="吃"></a>吃</h3><p>酒店旁边是美食城<br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (10).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (10).webp" width="300"></a><br>这边东西很贵，不是正常价位，可能店比人多。<br>麦当劳小薯条+一包麦乐鸡+橙汁要40块<br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (11).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (11).webp" width="300"></a></p><p>美食城里有个广式牛杂小店还算价格正常，同一家店的清凉补也很好喝。<br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (8).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (8).webp" width="300"></a></p><p>走十五分钟能走到云海帆歌的沙县小吃店，这里价格比较正常，可以当作日常饮食。<br>大餐没再吃了，这里美食城是有不少大餐的。</p><h3 id="住-1"><a href="#住-1" class="headerlink" title="住"></a>住</h3><p>沁禾酒店，从酒店房间到走进海里面只需要五分钟。<br>酒店服务特别好，除了空调有声音，没有不舒服的地方。<br>有很多不常见的配置，要捣鼓一下才能学会怎么用，比如按压开的窗门。<br>住的很舒服，很适合泡酒店度假。</p><p>我选的房型可以躺在床上看海。<br>阳台很适合坐着看海思考。<br><a href="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (6).webp" class="gallery-item" style="box-shadow: none;"> <img src="/img/Image-Itinerary-HaiNan/Image-Itinerary-HaiNan (6).webp" width="300"></a></p><h3 id="行-1"><a href="#行-1" class="headerlink" title="行"></a>行</h3><p>基本在酒店附近打伞走路。<br>公共交通不发达。<br>去赶高铁打车很好打，很多车在附近等。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;毕设旅行，在海南看海 &amp;amp; 做毕设 &amp;amp; 远程修bug。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="游记" scheme="https://tobenot.github.io/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
    <category term="游记" scheme="https://tobenot.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
    <category term="memorial" scheme="https://tobenot.github.io/tags/memorial/"/>
    
  </entry>
  
  <entry>
    <title>心界录</title>
    <link href="https://tobenot.github.io/2024/05/13/Spiritual-Heart-World-History/"/>
    <id>https://tobenot.github.io/2024/05/13/Spiritual-Heart-World-History/</id>
    <published>2024-05-13T08:24:34.000Z</published>
    <updated>2025-04-14T17:26:15.857Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本书类似《传习录》，使用对话形式记录心界中的方法论、三观内容，也有直接记录心界历史的可以当故事看的部分。<br>心界是作者的精神世界，是真实存在的合理世界。<br>本书是对其中事物的二次创作，包含部分虚构成分，最典型是像作者制作的游戏的世界观中，认为心界在光之境&#x2F;光明境。但是不会像鸿律篇中描绘的Silver那样可以对现实世界造成物理上的影响。<br>心界中的主控变更历史：<br>    - Robert（19.11.26，心界开拓日，本体进入心界）<br>    - Silver（19.12.12，银诞生日，银接过主角位）<br>    - Flower（20.07.08，银在决战日离开，自由意识之剑给了Robert，随后Robert给了花蕊）<br>    - Golden（22.06.20，金诞生日，花蕊未能在大学完成道途，让位于金）<br>    - Stellar（24.04.25，金在朝圣途中被Shadow杀死，星髓暂时接过主角位）<br>    - Golden（24.09.29，金羽冠事件，经过半年探索，星髓找到复活的金同学）<br>心界诞生的基础之一是阳明心学，在高中时期学了一部分，随后Silver进行了自己的探索，当然远不及阳明先生本人，剩下的部分在大四时才认真补完了。<br>不适合公开讨论的部分写在私藏的《深海心界录》中，建议和作者约饭直接问。<br>意见冲突的地方欢迎直接与作者辩论。</p><h1 id="敬告"><a href="#敬告" class="headerlink" title="敬告"></a>敬告</h1><p>作者才疏学浅，以浅水阅历企图解决大家的问题。如有大师经过请高抬贵手，不必诛伐作者。</p><h1 id="更新情况"><a href="#更新情况" class="headerlink" title="更新情况"></a>更新情况</h1><p>2024&#x2F;05&#x2F;13 公开初始版本，包括 心学论、爱恋论以及后续的短一些的篇目。再更新的内容会记在开头。<br>2024&#x2F;05&#x2F;30 简化星髓序，原序在深海中。<br>2024&#x2F;09&#x2F;22 只留下是适合讨论的 理律篇-心学论 其他部分沉入深海。<br>2025&#x2F;04&#x2F;15 补充心界主控变更历史</p><h1 id="心界录"><a href="#心界录" class="headerlink" title="心界录"></a>心界录</h1><p>“时即线，心即理。”<br>作者：心界所在地——光之境&#x2F;光明境</p><h2 id="星髓序"><a href="#星髓序" class="headerlink" title="星髓序"></a>星髓序</h2><p>《心界录》这本书以问答形式记录了金与心界中的朋友们探讨天理、哲学、心界的对话。</p><p>在无尽探索与铸造的过程中，愿《心界录》成为你寻找天理的罗盘，指引你到达心灵的彼岸。</p><p>——金之友 星髓敬上</p><h2 id="理律篇"><a href="#理律篇" class="headerlink" title="理律篇"></a>理律篇</h2><h3 id="心学论"><a href="#心学论" class="headerlink" title="心学论"></a>心学论</h3><p>星髓问：怎么看待心学？</p><p>金说：心学和记忆宫殿、清明梦一道，是心界的起源。在黑暗时代，银只学习了知行的部分，而没有看原著《传习录》，错过了天理的部分，但客观上讲，银自己践行了天理。从我们现在的角度回来看，天理这一部分是非常重要的部分。如果当时学到了天理，也许银就不会离开。现在我们看这本书也不晚。我们只是看了这本书的一点点，就知道了成为圣人亦是我们必向往的道路，也就与银同频共振了。</p><p>星髓问：什么是知行合一？是知道了就要去做吗？</p><p>金说：知行合一是客观事实，每个人无论如何，知行都是合一的。过去的知行决定了现在的知行，过去加现在的知行决定了未来的知行。知行是一个人的思考、行为的规律与事实，这规律从过往的面对事情的行为和认知中来，又被现在的面对事物的行为和认知塑造。</p><p>星髓说：你别太深奥了，重说。</p><p>金说：那就暂时按照传统印象，分开部分来说，虽然它们其实是同一种东西。知——可以认为是目前看到的，听到的，感受到的东西，以及头脑中目前的想法、身体中对这个环境中之前的行的印象。那么行就是具体的行动。实际上行是由知完全决定的。人的想法只是知的一部分，只影响一部分的行，实际上行都是受到对环境的印象驱使，也就是俗称的习惯。而行在之后的时间里，自然就是知了，所以说知行本为一体，是分不开的。</p><p>星髓问：所以知行合一什么积极意义呢？</p><p>金说：要改变知行唯一有效的方式就是改变行。借助自己的自由意志去改变行之后，让新的知行产生并延续。以及可以确认，自己的知行实际上是被过去的知行所决定的，头脑中的想法，自由意志，只是知的一部分而已，它并不是决定了全部知行。</p><p>星髓问：知行合一听起来是个客观事实，我们要用功的地方是用新知行去替代旧知行。那么怎么改变才是好的？</p><p>金说：致良知，向着天理的方向改变知行。</p><p>星髓问：什么是天理？</p><p>金说：天理是唯一的。天理是正确的事物，比如人需要空闲时间，比如人需要保持自己的身体健康。天理之间会互相冲突，但是他们都是正确的。我们每个人心中都有一份天理的投射，在这个层面上，天理就是每个人发自内心认为是正确的东西。这种认同是不能用言语表达的，即使说出来，也不代表自己发自内心就认同。无论言语怎么说，每个人都知道自己内心真正认同什么。天理投射是本心。本心是无需学习的，只要探究本心就能发掘出自己真正认同的东西。天理和天理投射一般是区别不大的，对于正常人不用再区分，我们共同地把它们称为是天理，或者共同地称为本心。</p><p>星髓问：如果我发自内心认同的事是错误的呢？比如说好心办坏事，比如说一个盗贼发自内心认同偷盗行为？怎么知道什么是真正的天理呢？</p><p>金说：天理确实会发生冲突，但是冲突需要在平衡的情况下进行。好心办坏事，可以通过沟通解决，当自己认为是好事，而被指的对象认定为是坏事时，可能是本心发生了冲突，这个时候大家都需要学习，最好的方式就是沟通。在学习之后我们得以拓展本心的范围，以此作为修正知行的标准。比如被指的对象确实是不想要自己的帮助，那么不帮便是了。比如被指的对象是与自己产生了矛盾，不愿接受自己的帮助，那么应该先去考虑矛盾。比如自己确实是做错事了，道歉改正便是。</p><p>金继续说：对于第二个盗贼的例子，可能盗贼本心依然正派，却因欲望蒙蔽而认同偷盗之事，比如生活费不够过自己想要的生活，或者贪财，便去偷外卖吃，伤害点外卖的人。这种情况是盗贼自己需要存天理灭人欲，我们能做的不多，无论是防御、讲学、惩戒，都是属于教育的一种而已。遗憾的是，欲望难以根除，也确实有本心与天理偏离很大的坏人，正如你所说的盗贼那般。至于什么是真正的天理，我认为天理是中庸平衡的，也是大体上对所有人都好的，并不打算伤害任何人的。</p><p>星髓说：你已经分析了几种情况，平时我们用功，就是用在这种分析上吗？</p><p>金说：我们还没讲完致良知、天理本心的部分。致良知是成为圣人的道路。圣人是本心即天理，知行即本心，没有受人欲影响的理想状态。我们学习圣道，正是要存养天理，去除人欲，以此来达到圣人的境界。</p><p>星髓说：为什么要成为圣人？成为圣人的生活是好的吗？</p><p>金说：这个问题的答案我直接能看得到。因为在我们之前的银就是圣人。不如问，因为不懂得存天理灭人欲而被欲望所控制，因为不学习天理不拓展本心而被愚昧所蒙蔽，这样的生活就是好的吗？</p><p>星髓说：那么如何成为圣人？你说去人欲，是要消灭所有人欲？</p><p>金说：重点来了。成为圣人的道路确实是存天理，去人欲。这里的人欲，也确实是所有的人欲。但是这里说的人欲，并不是大家所认为的享乐。人欲是指知行中，超过本心的部分。也就是说，吃大餐，适度吃几顿是符合本心天理的，而过度地吃，超过本心所认可的部分时，便是欲望了。再比如说，承担责任，超过自己本心所认可的部分，也许就变成了虚荣。熬夜工作，超过自己本心所认可的部分，也许就变成了逃避。本心天理是中正平衡适度的，超过本心的度，便是欲望作祟。</p><p>金继续说：也许说到这里，也许你已经认可了去人欲的必要性，对于是否成为圣人的答案，也松了一口气——确实，虽然说“我们需要的越少，我们就越接近神”，但是圣人也不必消灭自己的所有的需求。</p><p>金继续说：那么用功的纲领是这样的，对于我们已有的知行，我们需要致良知，在里面辨别出本心与人欲，这个过程需要诚意，需要挖掘自己内心真正认同的东西。而我们不能忘记学习。学习是拓展知行的过程，能让自己获得更多不同的知行的方式，都可以认为是学习的一种，包括读书、游历等。在获得新知行后，我们就可以回到第一步了。这样子就可以拓展或者修正我们的本心，使得本心更加接近真正的天理。我们可以把本心和人欲记录下来，而确认本心之后，我们可以用我们的自由意志去改变知行，这一步就是主要的用功的部分了。本心是静的，只有在动的事上磨练，才是真功夫。</p><p>星髓说：原来自由意志的用处是在这里。</p><p>金说：没错。如果我们没有自由意志，一切靠天生本心来行动，那么人人都是圣人。但是我们有了自由意志，所以我们既获得了拓展本心的机会，又引来了欲望作为我们的敌人。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本书类似《传习录》，使用对话形式记录心界中的方法论、三观内容，也有直接记录心界历</summary>
      
    
    
    
    <category term="灵界" scheme="https://tobenot.github.io/categories/%E7%81%B5%E7%95%8C/"/>
    
    
    <category term="灵界" scheme="https://tobenot.github.io/tags/%E7%81%B5%E7%95%8C/"/>
    
    <category term="文章" scheme="https://tobenot.github.io/tags/%E6%96%87%E7%AB%A0/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
    <category term="memorial" scheme="https://tobenot.github.io/tags/memorial/"/>
    
  </entry>
  
  <entry>
    <title>大模型基础技术学习</title>
    <link href="https://tobenot.github.io/2024/01/27/Tutorial-LLM-Foundation/"/>
    <id>https://tobenot.github.io/2024/01/27/Tutorial-LLM-Foundation/</id>
    <published>2024-01-27T09:04:32.000Z</published>
    <updated>2025-04-09T15:05:47.661Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="提示词"><a href="#提示词" class="headerlink" title="提示词"></a>提示词</h2><p>使用大模型的基础。</p><iframe src="//player.bilibili.com/player.html?aid=783250146&bvid=BV1Z14y1Z7LJ&cid=1119200061&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h2 id="Langchain"><a href="#Langchain" class="headerlink" title="Langchain"></a>Langchain</h2><p>包含了一些基础的大模型技术实现介绍。</p><iframe src="//player.bilibili.com/player.html?aid=826991534&bvid=BV1zu4y1Z7mc&cid=1480951492&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h2 id="GPT的Function-Call使用"><a href="#GPT的Function-Call使用" class="headerlink" title="GPT的Function Call使用"></a>GPT的Function Call使用</h2><h3 id="官方文档翻译"><a href="#官方文档翻译" class="headerlink" title="官方文档翻译"></a>官方文档翻译</h3><h4 id="Function-Calling-Overview"><a href="#Function-Calling-Overview" class="headerlink" title="Function Calling Overview:"></a>Function Calling Overview:</h4><p>在 OpenAI API 中，Function Calling 允许你描述函数，并让模型智能地选择生成一个包含调用一个或多个函数的 JSON 对象的输出。Chat Completions API 不直接调用函数；相反，模型生成 JSON，然后你可以在你的代码中使用这个 JSON 调用函数。</p><p>最新的模型（例如 gpt-3.5-turbo-1106 和 gpt-4-turbo-preview）已经经过训练，可以智能地检测何时应该调用一个函数（根据输入）并以更贴近函数签名的方式生成 JSON。但需要注意，这种能力也带来潜在的风险。强烈建议在对用户产生影响的操作之前建立用户确认流程（发送电子邮件、在线发布内容、购买等）。</p><h4 id="Common-Use-Cases"><a href="#Common-Use-Cases" class="headerlink" title="Common Use Cases:"></a>Common Use Cases:</h4><p>函数调用允许你更可靠地从模型中获取结构化数据。例如，你可以：</p><p>创建能够通过调用外部 API 回答问题的助手（例如 ChatGPT 插件）。<br>将自然语言转换为 API 调用。<br>从文本中提取结构化数据。</p><h4 id="Basic-Sequence-of-Steps-for-Function-Calling"><a href="#Basic-Sequence-of-Steps-for-Function-Calling" class="headerlink" title="Basic Sequence of Steps for Function Calling:"></a>Basic Sequence of Steps for Function Calling:</h4><p>通过在 functions 参数中定义的一组函数和用户查询一起调用模型。<br>模型可以选择调用一个或多个函数；如果是这样，内容将是一个字符串化的 JSON 对象，符合你的自定义模式（注意：模型可能会产生参数幻觉）。<br>在代码中将字符串解析为 JSON，并使用提供的参数调用你的函数（如果存在）。<br>通过将函数响应附加为新消息再次调用模型，让模型总结结果并返回给用户。<br>Supported Models:</p><p>并非所有模型版本都经过函数调用数据的训练。支持函数调用的模型包括：gpt-4、gpt-4-turbo-preview、gpt-4-0125-preview、gpt-4-1106-preview、gpt-4-0613、gpt-3.5-turbo、gpt-3.5-turbo-1106 和 gpt-3.5-turbo-0613。</p><p>此外，以下模型支持并行函数调用：gpt-4-turbo-preview、gpt-4-0125-preview、gpt-4-1106-preview 和 gpt-3.5-turbo-1106。</p><h4 id="Parallel-Function-Calling"><a href="#Parallel-Function-Calling" class="headerlink" title="Parallel Function Calling:"></a>Parallel Function Calling:</h4><p>并行函数调用是模型同时执行多个函数调用的能力，允许这些函数调用的效果和结果并行解决。这在函数需要很长时间的情况下特别有用，并减少了与 API 的往返次数。</p><h2 id="GPT回复格式遵循"><a href="#GPT回复格式遵循" class="headerlink" title="GPT回复格式遵循"></a>GPT回复格式遵循</h2><h3 id="格式遵循，返回JSON内容"><a href="#格式遵循，返回JSON内容" class="headerlink" title="格式遵循，返回JSON内容"></a>格式遵循，返回JSON内容</h3><p>有时候需要模型返回JSON格式的内容，为了防止返回格式异常并提高模型性能，在调用 <code>gpt-4-1106-preview</code> 或 <code>gpt-3.5-turbo-1106</code> 时，可以将 <code>response_format</code> 参数设置为 <code>&#123; &quot;type&quot;: &quot;json_object&quot; &#125;</code> 以启用 JSON 模式。启用 JSON 模式后，模型被限制为仅生成解析为有效 JSON 的字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">client = OpenAI(api_key=api_key)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">return_json</span>():</span><br><span class="line">    response = client.chat.completions.create(</span><br><span class="line">        model=<span class="string">&quot;gpt-4-1106-preview&quot;</span>,  <span class="comment"># gpt-3.5-turbo-1106</span></span><br><span class="line">        messages=[</span><br><span class="line">            &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You are a helpful assistant, return JSON format.&quot;</span>&#125;,  <span class="comment"># JSON is necessary</span></span><br><span class="line">            &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;谁赢了2020年的世界杯?&quot;</span>&#125;,</span><br><span class="line">        ],</span><br><span class="line">        response_format=&#123;<span class="string">&quot;type&quot;</span>: <span class="string">&quot;json_object&quot;</span>&#125; <span class="comment"># text default</span></span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;response:&#x27;</span>, response.choices[<span class="number">0</span>].message.content)</span><br></pre></td></tr></table></figure><h4 id="返回示例"><a href="#返回示例" class="headerlink" title="返回示例"></a>返回示例</h4><p>谁赢了2022年的世界杯? 返回的内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;winner&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Argentina&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;event&quot;</span><span class="punctuation">:</span> <span class="string">&quot;FIFA World Cup 2022&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;runner_up&quot;</span><span class="punctuation">:</span> <span class="string">&quot;France&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;location&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Qatar&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;December 18, 2022&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>如果启用了 <code>response_format=&#123;&quot;type&quot;: &quot;json_object&quot;&#125;</code>，但不在 Message 中加入 JSON 相关描述，就会强制报错，如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span>&#x27;error&#x27;<span class="punctuation">:</span> <span class="punctuation">&#123;</span>&#x27;message&#x27;<span class="punctuation">:</span> <span class="string">&quot;&#x27;messages&#x27; must contain the word &#x27;json&#x27; in some form, to use &#x27;response_format&#x27; of type &#x27;json_object&#x27;.&quot;</span><span class="punctuation">,</span> &#x27;type&#x27;<span class="punctuation">:</span> &#x27;invalid_request_error&#x27;<span class="punctuation">,</span> &#x27;param&#x27;<span class="punctuation">:</span> &#x27;messages&#x27;<span class="punctuation">,</span> &#x27;code&#x27;<span class="punctuation">:</span> None<span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h1 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;h2 id=&quot;提示词&quot;&gt;&lt;a href=&quot;#提示词&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="LLM" scheme="https://tobenot.github.io/categories/LLM/"/>
    
    
    <category term="LLM" scheme="https://tobenot.github.io/tags/LLM/"/>
    
    <category term="技术" scheme="https://tobenot.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="完整" scheme="https://tobenot.github.io/tags/%E5%AE%8C%E6%95%B4/"/>
    
    <category term="GPT" scheme="https://tobenot.github.io/tags/GPT/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
  </entry>
  
  <entry>
    <title>Docker实操</title>
    <link href="https://tobenot.github.io/2024/01/21/Tutorial-Docker/"/>
    <id>https://tobenot.github.io/2024/01/21/Tutorial-Docker/</id>
    <published>2024-01-21T14:41:41.000Z</published>
    <updated>2025-04-27T12:28:51.934Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="Docker：轻量虚拟环境"><a href="#Docker：轻量虚拟环境" class="headerlink" title="Docker：轻量虚拟环境"></a>Docker：轻量虚拟环境</h2><p>Docker是一个轻量的虚拟环境，具有以下特点：</p><ul><li>可以对工作目录进行隔离。</li><li>可以打包一个虚拟环境，即插即用就能运行，比如别人不用装Python等。</li></ul><p>在 <a href="https://tobenot.top/2024/01/21/Dev-Log-Project-Alkaid/">Project Alkaid</a> 中有强烈的目录隔离需求，以防虚拟助手误删系统盘。</p><h3 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h3><ul><li><strong>概念和快速上手教程：</strong> <a href="https://www.bilibili.com/video/BV14s4y1i7Vf">Bilibili 视频</a></li><li><strong>官网：</strong> <a href="https://www.docker.com/docker">Docker 官网</a></li><li><strong>官网安装链接：</strong> <a href="https://www.docker.com/get-started/">Docker 安装指南</a></li></ul><p>问题：docker打不开，报错Docker Desktop Unexpected WSL error</p><p>windows下可能需要安装WSL2。以管理员权限打开Powershell，运行以下命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl <span class="literal">--status</span></span><br><span class="line">wsl <span class="literal">--install</span></span><br></pre></td></tr></table></figure><h3 id="实际应用示例"><a href="#实际应用示例" class="headerlink" title="实际应用示例"></a>实际应用示例</h3><p>以下是 <a href="https://tobenot.top/2024/01/21/Dev-Log-Project-Alkaid/">Project Alkaid</a> 中实际使用的一些示例：</p><ul><li><a href="https://github.com/tobenot/Project-Alkaid/blob/main/Dockerfile">示例 Dockerfile</a></li><li><a href="https://github.com/tobenot/Project-Alkaid/blob/main/.vscode/tasks.json">VSCode 中构建 Docker 和运行 Docker 容器的任务</a></li><li><a href="https://github.com/tobenot/Project-Alkaid/blob/main/.vscode/tasks.json">TODO: VSCode 中提取 Docker 中保存的文件的任务</a></li></ul><p>你可以使用镜像名字代替容器 ID 来提取文件。<code>docker cp</code> 命令的语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> &lt;container_id&gt;:/path/in/container /path/on/host</span><br></pre></td></tr></table></figure><p>其中 <code>&lt;container_id&gt;</code> 可以是容器的实际 ID 或者容器的名称。所以你可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> your_image_name:/usr/src/app/saved /saved</span><br></pre></td></tr></table></figure><p>确保将 <code>your_image_name</code> 替换为你实际的镜像名称。这样会从运行的容器中提取 <code>/usr/src/app/saved/</code> 目录并将其复制到当前工作目录的 <code>/saved/</code> 目录下。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;Docker：轻量虚拟环境&quot;&gt;&lt;a href=&quot;#Docker：轻量虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;Docker：轻量虚拟环境&quot;&gt;&lt;/a&gt;Docker：轻量虚拟环境&lt;/h2</summary>
      
    
    
    
    <category term="技术" scheme="https://tobenot.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="工作流" scheme="https://tobenot.github.io/tags/%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    
    <category term="碎片" scheme="https://tobenot.github.io/tags/%E7%A2%8E%E7%89%87/"/>
    
    <category term="Docker" scheme="https://tobenot.github.io/tags/Docker/"/>
    
    <category term="虚拟化" scheme="https://tobenot.github.io/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
  </entry>
  
  <entry>
    <title>已经弃坑的ProjectAlkaid开发日志</title>
    <link href="https://tobenot.github.io/2024/01/21/Dev-Log-Project-Alkaid/"/>
    <id>https://tobenot.github.io/2024/01/21/Dev-Log-Project-Alkaid/</id>
    <published>2024-01-21T14:37:56.000Z</published>
    <updated>2025-04-27T12:28:51.936Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="弃坑"><a href="#弃坑" class="headerlink" title="弃坑"></a>弃坑</h2><p>弃坑原因：这种会有别人做的，还是去做开源贡献好了。我的主要方向也不在这里。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://github.com/tobenot/Project-Alkaid">仓库地址</a></p><p>Project Alkaid是一个以MIT协议开源的，能自动写代码的虚拟助手，开发的初始原因是因为本人工作忙，希望有一个虚拟助手能帮我写<a href="https://tobenot.top/2023/11/26/Dev-Log-AI-Game/">AI故事游戏</a>的代码</p><p>技术选型是python, gpt, VSCode, docker</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>Clone下来，用VSCode打开工程，VSCode的Terminal-&gt;Run Task…里面有构建和运行docker容器的脚本。<br>记得安装Docker。在Docker Desktop里面能更好的管理容器和终端。<br>虽然不用Docker其实也能跑，直接在VSCode里面开个终端输入python llm&#x2F;OpenAIChatExp.py<br>目前它还没那么危险，还不能读写文件</p><h2 id="2024-1-21"><a href="#2024-1-21" class="headerlink" title="2024.1.21"></a>2024.1.21</h2><p>新建文件夹<br><a href="https://github.com/tobenot/Project-Alkaid">仓库地址</a><br>被python的import整破防了，最后代码全放一个目录下了<br>搭建docker环境<br>写了一个gpt聊天客户端</p><p>大概是做了4h</p><h2 id="2024-1-27"><a href="#2024-1-27" class="headerlink" title="2024.1.27"></a>2024.1.27</h2><p>2.5h<br>写了一个Function Call示例<br>一开始是写了个加减乘除计算器<br>结果发现我们是有库可以调用的<br>调用一下就搞定了<br>我如果再花时间去弄更高级的计算器，或者弄连续自动分步调用，是不是在造轮子呢？<br>我要怎么能减少造轮子的情况？<br>我现在做Alkaid，是不是在造轮子？<br>因为它其实会比较像一个shell？</p><p>对话记录：<br>user: 算817<em>172</em>121<em>765</em>23<br>assistant: 817 * 172 * 121 * 765 * 23 &#x3D; 299,174,893,380<br>user: 算78668%239<br>assistant: 78668 % 239 &#x3D; 37<br>我验算过，都是准的</p><h2 id="2024-1-30"><a href="#2024-1-30" class="headerlink" title="2024.1.30"></a>2024.1.30</h2><p>项目暂时搁置<br>还是我亲自先做<a href="https://tobenot.top/2023/11/26/231126-AI-Game-Dev-Log/">AI故事游戏</a>吧，要答辩的</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;弃坑&quot;&gt;&lt;a href=&quot;#弃坑&quot; class=&quot;headerlink&quot; title=&quot;弃坑&quot;&gt;&lt;/a&gt;弃坑&lt;/h2&gt;&lt;p&gt;弃坑原因：这种会有别人做的，还是去做开源贡献好了。我的主要方向也不在这里。&lt;/p</summary>
      
    
    
    
    <category term="蒸汽机" scheme="https://tobenot.github.io/categories/%E8%92%B8%E6%B1%BD%E6%9C%BA/"/>
    
    
    <category term="LLM" scheme="https://tobenot.github.io/tags/LLM/"/>
    
    <category term="工作流" scheme="https://tobenot.github.io/tags/%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    
    <category term="碎片" scheme="https://tobenot.github.io/tags/%E7%A2%8E%E7%89%87/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
  </entry>
  
  <entry>
    <title>操场·高楼·太空电梯</title>
    <link href="https://tobenot.github.io/2024/01/20/Story-Playground-Skyscraper-SpaceElevator/"/>
    <id>https://tobenot.github.io/2024/01/20/Story-Playground-Skyscraper-SpaceElevator/</id>
    <published>2024-01-19T16:40:25.000Z</published>
    <updated>2025-04-09T15:04:39.526Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><p>操场·高楼·太空电梯</p><p>作者：苏敬峰<br>首发<a href="https://www.bilibili.com/read/cv11529157/">B站</a>于2021年06月01日（儿童节），全正文6440字，信息密度较高</p><p>在太阳还未升起的时候，惠就在操场上跑步了。</p><p>在太阳准备冒头的时候，惠慢了下来，走向了操场边沿，向坐在边沿护栏上的女人招手。</p><p>“蝎子~”</p><p>这是女人的外号，听说是在近百年前的战争时期，被同队的战士们赐予的。</p><p>惠张开双臂转了一圈，背对着初升的太阳走来。</p><p>“这地方的空气真是清新啊！”</p><p>蝎子点了点头，依然坐在金属护栏上不动，问惠：</p><p>“惠，没吃早餐吧，不会低血糖吗？”</p><p>惠已经走到蝎子面前了，她凑到蝎子耳边。</p><p>“偷偷吃了一点。希望头脑清楚些。”</p><p>蝎子睁大了眼睛，随后又放轻松了。</p><p>“也好吧。”</p><p>惠从蝎子脚边的背包里拿出自己的水瓶，也轻轻坐在操场边沿的护栏上，与蝎子一同看日出。</p><p>喝了几口水，惠问道：“楼下下雨了吗？”</p><p>蝎子面向惠，双手抓住坐着的护栏，往下望。</p><p>蝎子能看到每一层的窗户，它们密密麻麻地铺满了高楼的表面。蝎子看到下方的云彩如棉花田般整齐排列，慢悠悠地向远离高楼窗户的方向运动。</p><p>“可能吧，问客人。”蝎子说。</p><p>惠说：“客人也不一定知道。”</p><p>惠从护栏上跳下来，做出打伞的手势。</p><p>“总之我想要去领一把伞。”</p><p>蝎子认真端详着惠，等她继续说。</p><p>“我要领那个，童真款的，粉色的那把。”</p><p>这下蝎子可以接话了。</p><p>“就是那个，被雨淋到会叮叮咚咚的吧。”</p><p>“Perfect！就是那个，我就喜欢听那个声音！”</p><p>“那个供量不多，虽然拿的都是小孩子们，小孩子们也不是很多。”</p><p>“这次没有就下次嘛。”</p><p>现在是2112年，异能枯竭事件在几个月前发生了。人类们开始大力限制异能的使用，出台了各种在事件之前难以想象的法令。所有借助灵的活动，都受到了毁灭性的限制。</p><p>在这一栋赤道最高楼上方的操场上，除了惠，还有几个人在跑步锻炼。</p><p>惠刚刚想追着一个青年跑，但是怎么追都追不上。</p><p>操场边沿有许多锻炼器材，它们中的很多已经废弃很久了。</p><p>三四个小孩子在沙地里玩耍，惠看不懂他们在玩什么。</p><p>从远处传来一阵轰鸣声，一艘飞船拖着蓝色的尾焰径直飞向了操场，定在了操场边沿。</p><p>阳光刚好照在飞船前方的标志上。</p><p>蝎子看着飞船，说：“神舟货运，以后就要坐这玩意了吗。该改个名字，比如神舟载人什么的。”</p><p>惠拍拍蝎子，“今天之后我们一起回祖国训练深空工作吧，我想当太空人！”</p><p>蝎子笑笑，“好，这不是早说定了吗。将来我们会在你老公那边工作的。”</p><p>惠用力拍拍她，“才不是这个呢，组织安排我去哪我就去哪。”</p><p>时间差不多到了，记者们搬着大大小小的机器，从顶楼下方的入口蜂拥而至，在跑道外的边缘各自抢到了自己的位置，记者们中有黄头发的、棕头发的、黑头发的、红头发的。他们操着各种各样的语言，报道着这最后一次的事件。</p><p>“现在是六点十三分，我在赤道上的最高楼，基础大厦的顶端，我们即将见证在地球上进行的最后一次的太空电梯运载。地球轨道上的灵已经几乎没有了，维持太空电梯的工作已经变得十分危险了，在三个月内全球陆续发生了九起事故。在这一次运载之后，太空电梯将被淘汰。日后地球联合会大力探索解决超重问题的其他办法。”</p><p>记者们并没有急着来采访惠和蝎子，只有一位金发碧眼的少年，穿过了人群，快步向惠走来。少年身上的挎包摇动起来，发出一些舒服的声响。</p><p>“寻叶！”惠小跑上去抱住他，“我就知道你会来。”</p><p>少年从挎包里取出了一根棒棒糖，递给了惠，说：“呐，我特地给你带的。”</p><p>惠接过红色包装的棒棒糖。“好耶！”随后跑回蝎子坐的地方，把糖放进了地上的背包里。</p><p>惠又向少年走回来。“客人应该要来了，不过他没回我的消息。”</p><p>少年说：“毕竟时间还没到，感觉这里的一切都很准时。”</p><p>少年望向不远处的太空电梯，继续说：</p><p>“比起这个，我可是第一次在现实中见到太空电梯的样子。在科幻小说里读到的太空电梯应该是有很多很多缆绳连接的。”</p><p>惠说：“好好看看吧，我们有时候直接叫它光柱。”</p><p>少年说：“哦！确实是。一个很粗的光柱啊。”</p><p>远处看过去，操场另一头的太空电梯，正是一个光柱的模样。不过，如果不仔细看，绝对是看不清楚的，光柱的浅蓝光极淡，在一个圆柱面上各处游移，时而暗淡，时而微光，太空电梯仿佛在呼吸。</p><p>少年又转向惠。“以后我们还会搞太空电梯的吗，非灵能的。”</p><p>但是少年没等惠回答，又继续说：“操场边上这些设备，都是灵能的吗，看起来被禁用很久了。为什么没有清理掉呢？”</p><p>惠笑笑，说：“你可真有好奇心，不像克隆出来的那些算成几百岁的人。你是怎么上来的？”</p><p>少年仰起头，用手锤了锤自己的胸口，说：“我是走上来的。路上见识到了很多。”</p><p>惠鼓起掌来，“年轻真好啊，年轻。”</p><p>少年说：“惠姐姐也很年轻。”</p><p>两人笑起来。</p><p>惠把少年拉近，说：“摄像机凑过来一点，给我个特写~”</p><p>少年眨着眼睛，说：“好好好，让我把姐姐最好的一面录进去。”</p><p>少年的蓝眼睛反射着惠的笑容，如果仔细看，就能发现瞳孔中心的微微蓝光。</p><p>蝎子一直在一旁观赏着周围的一切，在一动不动许久之后，她对少年说：</p><p>“寻叶，对吧，他们中的很多人都在说着中文。”</p><p>少年走向蝎子，又看看各色皮肤的记者们。</p><p>“是啊。不过你不能忽视，地联开会还是讲英文。”</p><p>蝎子说：“寻叶，你带了传统摄像机吧。”</p><p>少年说：“要离开你多远才好？”</p><p>蝎子说：“除非你能飞。”</p><p>少年叉起腰。“我自己有灵能。”</p><p>蝎子摸摸少年的头，说：“别让灵能盾碎在你的眼睛前就好。”</p><p>“那比火星撞地球概率还低。”</p><p>蝎子说：“我知道有一个能力者，她可以改变物体的速度，也许她可以把火星扔过来。”</p><p>这下惠也笑起来了。</p><p>蝎子双手扶着护栏，收起了笑容，问：</p><p>“作为记者，也提点记者的问题吧。”</p><p>少年整了整衣领，站直，说：</p><p>“那就，作为太空电梯的最后两位发射员和维持员，你们有什么感想？”</p><p>少年还没问完，远处的记者们欢呼起来，太空电梯前的地面出现了一个蓝光绘制的四维超立方体的三维投影，在六次闪光之后，客人带着一个公文包出现在了太空电梯前。</p><p>惠看着少年的蓝眼睛，竖了个大拇指，说：“未来加油！”</p><p>惠和蝎子快步走向太空电梯，记者们急忙举起各种各样的设备，拍了起来。</p><p>惠走到客人面前，说：“好像迟到了几秒。”</p><p>客人笑笑，两人互相端详了几秒钟。</p><p>“瞬移可真是有牌面。”惠说。</p><p>蝎子凑上前。“客人，请确认你身上带的东西最少，什么其他的都别带。公文包我帮你放到货运飞船去吧。”蝎子拿过公文包，转身走向标有“神舟货运”的飞船边。</p><p>客人看了看不远处拍摄的记者们，摸了摸口袋。</p><p>“诶呀，不好意思，手机忘记放了。”</p><p>客人从口袋中拿出一块半透明的薄板，轻轻拍了拍惠的手臂。</p><p>“维持员也过来吧。”</p><p>在跑道上跑步的一个青年拿出了一块糖。咬碎崩解之后，他又开始跑起步，不过现在，任谁也说不清他到底在哪了。只有在百米跑道上被风驰电掣的青年带起来的一阵阵风，能让人感知到他不可忽视的存在。</p><p>惠跟着客人，也走到了飞船边，惠问：</p><p>“下面下雨了吗？”</p><p>客人说：“我没有直接看到，不过，嗯，我听到有雨声和雷声。”</p><p>“诶？”惠高兴起来。</p><p>客人拿起了蝎子刚刚放在货运架上的公文包，从里面拿出来一件衣物。客人把衣物抖开给惠看。</p><p>是一件粉色的雨衣，上面印着各种各样的图案，棒棒糖、草莓、小蛋糕。</p><p>在惠的震惊中，客人把雨衣递给惠。</p><p>“我特地准备送给你的。”</p><p>惠接过雨衣，把它叠好，说：“我一定会一直穿着它回家的，回我们的故土！”</p><p>“现在是六点四十七分，可以看到，客人、发射员和维持员都到位了，客人和维持员也换上了专用的轻质套装。他们准备越过太空电梯‘光柱’的屏障，之后发射就可以开始了。”一名棕色头发的记者用流利的中文快速向观众们报道。</p><p>少年在近处看着惠。</p><p>蝎子把一颗灵能糖递给惠，灵能糖看起来全然是一块祖母绿形的宝石，侧面看起来是一个正八边形，与核桃一般大，几乎纯粹的浅蓝色覆盖了宝石的每一处空隙。淡淡的蓝光蕴藏在宝石的棱角之中。</p><p>惠把灵能糖装进左边口袋，向蝎子点了点头，单手牵着客人穿过了太空电梯的光柱面，空气变得压抑起来。为了减小阻力，这里的空气做不到像操场上一样的清新。不过两人也没什么怨言。</p><p>惠和客人并排站在一起，看着蝎子和记者们，他们的双手都戴上了两个手环，不过只有惠的右手和客人的左手的手环中间有带子连接着。惠的右手用力扣着客人的左手。</p><p>惠说：“一定不要松手，不然会死的。”</p><p>客人说：“也不是第一次这样上去了。”</p><p>惠向蝎子喊：“发射员，可以开始了！”</p><p>记者们全神贯注。蝎子缓缓蹲下来，一只手按在了草地上。</p><p>蝎子身边的草地开始扭曲变形，对于在场的能力者来说，空气感觉也在扭曲。</p><p>少年睁大双眼，连忙退后。</p><p>从蝎子的手中传出一阵异响，声音越来越低沉洪亮，周围的人们都不敢说话。</p><p>操场上玩乐的小孩子和锻炼的人们都停下来，看向太空电梯。</p><p>一阵阵大风刮过操场。少年已经退到了刚刚蝎子所坐在的栏杆上，头发被吹乱了，少年的手臂上也出现了灵能盾的裂痕，天蓝色的光芒从裂缝中渗出。</p><p>客人和惠缓缓飘起来。</p><p>在蝎子的手离开草地的时候，震耳欲聋的爆炸声从她手中传出，大风立刻停止了。</p><p>客人和惠一瞬间从记者们的相机里消失了，记者们马上把相机抬高，都想捕捉到人类直接发射升空的奇景。</p><p>少年两臂流出血来，大口喘气，在所有记者中，也许他的摄像机是最灵敏的、最清晰的。</p><p>他的眼睛死死盯着上升中的两人，不想错过任何一个细节。</p><p>在比云层高几倍的高空中，客人津津有味地观赏着下方鳞次栉比的高楼大厦。</p><p>“风景真好，虽然。”客人停顿了一下，“有时候高楼也看腻了。总是在高楼之间穿行，也挺烦恼。在上面看，还算新颖。”</p><p>“那就多来操场锻炼吧，空气很好。”</p><p>在对话之间，两人已经沿着光柱上升了几万米，从现在这个位置看下去，地面平坦如宣纸。</p><p>两人一直低头看着脚下的大地，客人感慨：“就是最高的大厦，也变得很渺小了。在远处看着地球，也只是一个光点。”</p><p>客人感到身体被一个重锤砸碎，随后是一小段连续的震动与一阵一阵的冲击。客人感到头疼欲裂，身体也刀割一般地疼。惠的手握的更紧了，泛着蓝光的裂纹从她头顶向下蔓延，穿过了她的双眼，一直往下方进发。客人的头疼稍微缓解，不过他大声说：“惠，没事！不要逞强。”</p><p>惠抬头看向客人，举起左手指着远方。“你看！弧形的地平线！”</p><p>客人顺着惠的指向看过去。</p><p>从地球远处弧线上射来的太阳光，大多被光柱挡在了外面。惠本来有点看不清客人的脸，现在自己灵能盾的闪光，让她什么也看不见了。</p><p>不过太阳依旧闪耀。</p><p>惠左手伸进口袋里，小心翼翼地拿出灵能糖，放进嘴里咬了起来。</p><p>客人听到了咬碎硬物的声音和灵能糖崩溃的声音——对他来说再熟悉不过了。</p><p>“诶？惠，这是正常流程吗？”</p><p>灵能糖崩解出来的碎块沾满了惠的嘴，在嘴唇外面也放射状地散落着一些碎块。</p><p>惠身上的裂纹很快消失了，惠与客人四目相对。</p><p>惠笑着说：“这是最后一次维持，所以组织破费了，要让客人舒服。”</p><p>惠把身位移到了客人身前，她伸出左手，客人先伸出了右手。</p><p>现在两人十指相扣了。</p><p>手环上伸出了连接的带子。</p><p>客人感觉到了前所未有的舒适、平稳。</p><p>客人说：“正常来说一开始就该这样的。”</p><p>惠盯着客人，轻轻说：“这么多年了，过得还好吗？”</p><p>太空电梯底部，记者们聚集在操场边沿上，用各种各样的东西写着稿子。</p><p>有些能力者刚从楼下借到纸笔，气喘吁吁地也赶紧开始写了。</p><p>少年听着一个红头发记者的英语报道。</p><p>“维持员使用的能力是消除惯性，减小有效质量。历史上出现过的‘感叹号’机甲，十五吨重的大怪物，能在马路上奔跑而不踩坏路面，就是通过仿灵学学习的成果。”</p><p>“今后，通过增加速度和消除惯性运作的太空电梯，将暂时被历史淘汰。很长的一段时间里，我们不得不使用慢速方式或者超距瞬移，这也许会对太空探索造成一些阻碍。上帝保佑我们。”</p><p>不到七点一刻，惠和客人就以比洲际导弹还快的速度冲进了同步空间站。</p><p>在进入空间站之后，惠和客人感受到了千斤的压力，一双无形的大手把他们抓起来，放在了一座百层高楼上，这座高楼的顶端，也是一个巨大的操场，环绕的跑道应该不止一千米长。</p><p>空间站是一个大圆筒，远处的地面升起，环绕头顶，又落在身后。</p><p>客人对着遥远的地面张开双臂。“这倒是百看不厌啊！”</p><p>惠说：“我们以后说不定也能做深空的工作。”</p><p>并没有引擎的声音，一艘飞船从底下升起，停在了操场边上，惠多少被它吓了一跳。惠分明的看到，飞船头部有“天问探索”四个大字，和飘逸帅气的水墨图标。惠看到它后方只有两个方方正正的喷口。</p><p>惠的注意力完全被它吸引了。“是光速引擎啊！最新的飞船！我只是听过而已！”</p><p>客人说：“她叫惠。”</p><p>“诶？”</p><p>“我起的名。”</p><p>惠转头看着客人，笑起来。但是想到自己嘴上嘴里还有灵能糖崩解的残渣，惠又有点尴尬，避开客人的视线。</p><p>惠说：“要是寻叶也在这里，他肯定会激动死的吧。”</p><p>客人双手扶着惠的肩，说：</p><p>“你只有一颗糖吧？”</p><p>惠顿了顿，说：“不是，另一颗会在回家时吃的。”</p><p>客人说：“那就拿出来，让我把它变浓点吧。在这里我们是允许用能力的。”</p><p>惠一时语塞。</p><p>“话说，既然你要坐这种飞船，你们是去半人马座吧。”</p><p>返回时间到了。</p><p>记者们一激灵，穿过跑道，围到太空电梯旁边。</p><p> “太空电梯的返程是十分危险的，加速过程对于消除惯性不利，返程灵浓度更低。最近的法令规定了返程的维持员都要在返程时食用灵能糖。” 记者咬字清晰，语速惊人。</p><p>寻叶一直在人群后面，高楼的边栏上，与蝎子一起坐着。</p><p>少年问：“你见过事故吗？”</p><p>蝎子说：“很久以前，确实有见过直接摔下来摔得不成样子的。”</p><p>“那时候是一个大叔，摔下来的时候身上到处都是血和破碎的灵能盾，还把双腿摔断了。”</p><p>“光和血混在一起，惨不忍睹。一起下来的客人的情况还稍微好一点。”</p><p>“虽然都救回来了，大叔的腿也接上了。但是大叔后面就没干过这行了。也不知道现在去哪了。”</p><p>“其实客人也没追究他。”</p><p>蝎子把腿交叉，望着前面的草坪。</p><p>“他还挺厉害的，又努力又有天赋。”</p><p>“我和他挺好的。”</p><p>“我记得他躺在操场旁边晒太阳。”</p><p>蝎子看起来完全沉浸在了回忆之中，少年认真地看着她，全然不顾肩上碎出血的灵能盾。</p><p>“反正后面都有吃灵能糖了。”</p><p>惠在深空中向地球坠落，她向她的祖国望去。</p><p>“好高啊。”</p><p>记者们围在太空电梯旁边，焦急地等待。</p><p>远处出现一个黑点，少年看到了超高速下落的惠。</p><p>跑步的青年也停下来看，青年满嘴都是灵能糖的残渣，蓝色的碎片已经失去了光芒。</p><p>小孩子们也凑到一起围观。</p><p>蝎子从栏杆上跳下来，说：</p><p>“速度太快了。”</p><p>她快速跑到太空电梯下，抬头看下坠的惠，记者们给她让出了路。</p><p>少年依然坐在远远的后方，灵能盾的裂纹从他大腿上蔓延开来，蓝色的眼睛紧紧盯着越来越大的黑点。</p><p>已经能看清楚惠的姿态了。</p><p>惠在空中侧躺着，闭着眼睛自由落体，双手微微张开，拥抱着眼前的太空站、宇宙。</p><p>小孩子们兴奋起来：好快！</p><p>蝎子注视着上方。“不，不是的。混蛋。”</p><p>惠如同彗星一般，向这座高楼陨落。</p><p>在记者们、全球几千万观众的注视下，惠精准地砸在了太空电梯的入口处。</p><p>入口的地面碎开，在惠身边画了一个错综复杂的图案。</p><p>惠深陷进了地面，身下的灵能盾破碎发光。</p><p>蝎子急忙走上前。</p><p>惠看起来很放松，像是襁褓中睡着的婴儿。蓝光从她身下放射出来，在蓝光的照耀下，血也从坑中向外缓缓渗出。</p><p>蝎子摇了摇惠，并没有反应。</p><p>蝎子伸手摸了摸她身下的血，血沾满了她的手。</p><p>周围的观众们愣住了。</p><p>蝎子回头望着少年，少年已经走了过来，他的大腿也开始渗血。</p><p>少年并没有什么表情。“惠姐姐……”</p><p>蝎子的手臂被一只手抓住。她猛回头，看到了惠的笑脸。</p><p>“哈哈哈哈吓到了吧。扶我起来。”</p><p>惠一脸坏笑，蝎子长叹了一口气。</p><p>周围一片欢呼声和鼓掌声。</p><p>惠扶着地面站了起来，她身后的裂纹很快愈合，也不再有伤口，看起来毫发无伤。</p><p>惠对着记者们说：“这就是最后一次的表演！”</p><p>少年笑了。</p><p>蝎子抱住惠。什么也没说。</p><p>蝎子仔细看惠，惠嘴里的残渣和她见过无数次的不一样，即使已经结束了返程，灵能糖的残渣还是非常的亮，碎片也比以往密集，甚至连成了四根放射状的线，从嘴里到嘴外，像是一种鳞片。</p><p>蝎子说：“我说，你上去的时候就吃了糖吧。”</p><p>惠说：“我亲爱的又从光速飞船那里拿给我了一颗。”</p><p>“乱来，他不会有这个空闲的吧？”</p><p>“那你就不懂咯。”</p><p>“我什么都懂。”</p><p>在下坠之前，长筒型同步空间站的操场草坪上。</p><p>客人抱了上来，对惠说：</p><p>“这一颗也可以。”</p><p>惠静静地享受着这一刻。</p><p>客人摸摸她的头。</p><p>许久，客人推开怀抱，用双手把惠的脸托起。</p><p>两个人又一次四目相对。</p><p>“亲爱的，这么久以来辛苦了。”</p><p>空间站里的人造太阳熄灭了，高楼们纷纷亮起灯。</p><p>用异能解决超重问题而极速往返太空的太空电梯，终于在这个时候被时代淘汰了。</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;p&gt;操场·高楼·太空电梯&lt;/p&gt;
&lt;p&gt;作者：苏敬峰&lt;br&gt;首发&lt;a href=&quot;https://www.bilibili.com/read/cv11529157/&quot;&gt;B站&lt;/a&gt;于2021年06月01日（儿童节），全</summary>
      
    
    
    
    <category term="小说" scheme="https://tobenot.github.io/categories/%E5%B0%8F%E8%AF%B4/"/>
    
    
    <category term="小说" scheme="https://tobenot.github.io/tags/%E5%B0%8F%E8%AF%B4/"/>
    
    <category term="恋爱" scheme="https://tobenot.github.io/tags/%E6%81%8B%E7%88%B1/"/>
    
    <category term="异能" scheme="https://tobenot.github.io/tags/%E5%BC%82%E8%83%BD/"/>
    
    <category term="科幻" scheme="https://tobenot.github.io/tags/%E7%A7%91%E5%B9%BB/"/>
    
    <category term="短篇" scheme="https://tobenot.github.io/tags/%E7%9F%AD%E7%AF%87/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
    <category term="article" scheme="https://tobenot.github.io/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>谈谈生命卷轴吧</title>
    <link href="https://tobenot.github.io/2024/01/03/Methodology-Now-Talk-About-LifeScroll/"/>
    <id>https://tobenot.github.io/2024/01/03/Methodology-Now-Talk-About-LifeScroll/</id>
    <published>2024-01-02T17:49:54.000Z</published>
    <updated>2025-04-09T15:00:28.397Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><p>【这篇文章以一种泛光的文字书写在羊皮纸上】</p><p>生命卷轴是一种游戏化的，后验的，记录式的数值化总结以及日记记录方式<br>三大要素：基础身体值、技能爱好值、快乐意义值<br>每天夜幕降临时进行一次仪式般的维护<br>每天关注自己的睡眠时光，运动情况和总体感觉去评基础身体值的变化（本蝶在这里还有一项“灵力”）<br>每天只要做了什么事，对应的技能爱好值就加个10，比较激动人心的话就涨上2030<br>满100升一级这样子，升级还要求在这方面有发生特别了不起的事情（里程碑），如果没有产生这些特殊时刻，就只能在99点徘徊啦（比如听歌 印象中在九级至少卡了半个月）<br>里程碑比如什么工程做到一个关键点了封包了，比如今天突然有升华似的进步什么的<br>每天给快乐意义评下级，快乐能负，意义就一直累积。在快乐那一栏开始写简短日记（评这俩总得有理有据）。其实这两项是先写的。快乐就如字面意思，意义就是推动爱好、追求理想、促进个人成长的程度。</p><p>经过了一年不间断的记录，我已经对生命卷轴的成长状态有些麻木了。</p><p>不过这个记录体系最重要的功能之一就是提醒我推动个人规划<br>如果有个方面的数值一直停滞不前，可能要有针对性地调整下目标<br>我刚刚尝试了一下“人升”APP<br>它的理念是以task来驱动，完成自己定制的任务获得经验值和金币，是先验的<br>这种类似番茄钟的理念，我感觉对于我们的日常生活来说是一种打扰</p><p>后验的生命卷轴机制对于日常生活并不会造成打扰<br>它给予我一种在事后评估自己成长的机会，而不是在事前设定任务时的压力。<br>它是一份静默的记录，不会干扰我日常的正常生活，却在需要的时候，提供了一个审视和反思的窗口。<br>它在平时无法激励我完成各种行动，只有在事后推进规划和反思总结的作用</p><p>也许下一步我可以试着加入正反馈？当然还是维持后验的，不打扰生活。<br>“人升”APP里面是可以用金币买自己定的奖励，也可以买别人定的奖励<br>它的网络交流这块挺有趣的，可以交流DIY的奖励和任务<br>但是我们对自己限制奖励，如果一定要完成什么才给奖励，这感觉是一种不必要的折磨<br>比如一个人每个工作日都要来杯蜜雪，现在突然跟他说要花金币来买才能喝<br>这不会太舒服</p><p>不过可以试试在SILVER当时用的心界奖励<br>用极晶盐来换心界里的东西<br>感觉可以搞搞，顺便还能助推心界主线</p><p>我还没和星髓渡海呢</p><p>【羊皮纸的右下角画了一个八齿的太阳】</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;p&gt;【这篇文章以一种泛光的文字书写在羊皮纸上】&lt;/p&gt;
&lt;p&gt;生命卷轴是一种游戏化的，后验的，记录式的数值化总结以及日记记录方式&lt;br&gt;三大要素：基础身体值、技能爱好值、快乐意义值&lt;br&gt;每天夜幕降临时进行一次仪式般的</summary>
      
    
    
    
    <category term="心界" scheme="https://tobenot.github.io/categories/%E5%BF%83%E7%95%8C/"/>
    
    
    <category term="完整" scheme="https://tobenot.github.io/tags/%E5%AE%8C%E6%95%B4/"/>
    
    <category term="思维" scheme="https://tobenot.github.io/tags/%E6%80%9D%E7%BB%B4/"/>
    
    <category term="心界" scheme="https://tobenot.github.io/tags/%E5%BF%83%E7%95%8C/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
  </entry>
  
  <entry>
    <title>谈谈生命卷轴</title>
    <link href="https://tobenot.github.io/2024/01/03/Methodology-Lets-Talk-About-LifeScroll/"/>
    <id>https://tobenot.github.io/2024/01/03/Methodology-Lets-Talk-About-LifeScroll/</id>
    <published>2024-01-02T17:45:54.000Z</published>
    <updated>2025-04-09T15:00:26.577Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><p>【这篇文字以一种平凡的笔墨书写在普通的A4纸上】</p><p>生命卷轴是一种游戏化的，后验的，记录式的数值化总结以及日记记录方式<br>三个部分：基础身体值、技能爱好值、快乐意义值<br>每天晚上维护一波<br>每天根据自己的睡眠时段，运动情况和总体感觉去评基础身体值的变化（本蝶在这里还有一项“灵力”）<br>每天只要做了什么事，对应的技能爱好值就加个10，做的比较猛的话加2030<br>满100升一级这样子，升级还要求在这方面有发生特别了不起的事情（里程碑），不然就在99卡着<br>（比如听歌 印象中在九级至少卡了半个月）<br>比如什么工程做到一个关键点了封包了，比如今天突然有升华似的进步什么的<br>每天给快乐意义评下级，快乐能负，意义就一直累积。在快乐那一栏开始写简短日记（评这俩总得有理有据）。其实这两项是先写的。快乐就如字面意思，意义就是推进爱好、推进理想、推进个人成长的程度。</p><p>我已经记了一年，目前我对其数值成长已经是一种麻木的状态</p><p>不过其最重要的作用应该是进行一定的警示，并且推进规划<br>有个东西半天不涨你总得有啥计划吧<br>我刚刚试用了一下“人升”APP<br>它的理念是task驱动的，完成自己定制的任务获得经验值和金币，是先验的<br>类似番茄钟的理念，我感觉对于我的日常生活来说是一种打扰</p><p>后验的生命卷轴机制对于日常生活不会造成打扰<br>大部分时候我都忘了有这个东西，到了睡觉前才想起来）<br>在平时无法完成对我们行动的激励，只有推进规划和反思总结的作用</p><p>也许下一步可以试着加入正反馈？当然还是维持后验，不打扰生活。<br>“人升”APP里面是可以用金币买自己定的奖励，也可以买别人定的奖励<br>网络交流这块挺有趣的，交流自己DIY的奖励和任务<br>但是对自己限制奖励，一定要完成什么才给奖励，感觉是一种不必要的折磨<br>比如一个人每天都喝杯蜜雪，突然跟他说要花金币来买才能喝<br>这种感觉</p><p>不过可以试试古代时用的心界奖励<br>“金币”可以买把心界里的剑什么的<br>当时叫极晶盐<br>感觉可以考古出来搞搞，顺便还能助推心界主线</p><p>还没和星髓渡海呢</p><p>【A4纸的右下角打印了一个八齿的太阳】</p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;p&gt;【这篇文字以一种平凡的笔墨书写在普通的A4纸上】&lt;/p&gt;
&lt;p&gt;生命卷轴是一种游戏化的，后验的，记录式的数值化总结以及日记记录方式&lt;br&gt;三个部分：基础身体值、技能爱好值、快乐意义值&lt;br&gt;每天晚上维护一波&lt;br&gt;</summary>
      
    
    
    
    <category term="蒸汽机" scheme="https://tobenot.github.io/categories/%E8%92%B8%E6%B1%BD%E6%9C%BA/"/>
    
    
    <category term="完整" scheme="https://tobenot.github.io/tags/%E5%AE%8C%E6%95%B4/"/>
    
    <category term="思维" scheme="https://tobenot.github.io/tags/%E6%80%9D%E7%BB%B4/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
  </entry>
  
  <entry>
    <title>RSS订阅是什么以及怎么用</title>
    <link href="https://tobenot.github.io/2024/01/02/Tutorial-RSS/"/>
    <id>https://tobenot.github.io/2024/01/02/Tutorial-RSS/</id>
    <published>2024-01-02T15:03:36.000Z</published>
    <updated>2025-04-27T12:28:51.930Z</updated>
    
    <content type="html"><![CDATA[<div class=".article-gallery"><h2 id="RSS订阅是什么"><a href="#RSS订阅是什么" class="headerlink" title="RSS订阅是什么"></a>RSS订阅是什么</h2><p>RSS订阅是古老的东西</p><p>大概作用是订阅信息源，信息源发布新文章时，在RSS阅读器里面可以收到推送<br>比起上各种平台被推荐算法带着走，RSS订阅是可以考虑的方法</p><p>感觉用RSS订阅大家的博客是最实用的用法了）<br>并不是所有网站都能用RSS订阅，如果一个人的博客没有RSS订阅，去催他加上</p><h3 id="RSS订阅的详细介绍"><a href="#RSS订阅的详细介绍" class="headerlink" title="RSS订阅的详细介绍"></a>RSS订阅的详细介绍</h3><p>这里有知乎的一个文章，一文读通：<br><a href="https://zhuanlan.zhihu.com/p/349349861">知道RSS的人越少，我就越希望它能被人知道！</a></p><h2 id="先推荐一个RSS阅读器"><a href="#先推荐一个RSS阅读器" class="headerlink" title="先推荐一个RSS阅读器"></a>先推荐一个RSS阅读器</h2><p><a href="https://www.agrreader.xyz/">AgrReader官网</a></p><h2 id="挖掘网站的RSS订阅网址"><a href="#挖掘网站的RSS订阅网址" class="headerlink" title="挖掘网站的RSS订阅网址"></a>挖掘网站的RSS订阅网址</h2><p>Rsshub-Radar插件</p><p>Chrome打开这个网址就能安装：<br><a href="https://chromewebstore.google.com/detail/rsshub-radar/kefjpfngnndepjbopdmoebkipbgkggaa">Rsshub-Radar插件</a><br>装好后打开网站时，如果有RSS网址，就能在网址右边的插件管理里面看到RSS有个红点，告诉你RSS订阅网址</p><p>把网址放进RSS阅读器里就能完成订阅！</p><h2 id="给hexo博客添加RSS订阅"><a href="#给hexo博客添加RSS订阅" class="headerlink" title="给hexo博客添加RSS订阅"></a>给hexo博客添加RSS订阅</h2><p>用插件：<br><a href="https://blog.csdn.net/qq_38140292/article/details/119076455">【hexo】基础教程-四-新增RSS订阅</a><br>本网站使用该插件生成RSS订阅链接，欢迎订阅</p><p><a href="https://tobenot.top/atom.xml">订阅作家之屋</a></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;.article-gallery&quot;&gt;&lt;h2 id=&quot;RSS订阅是什么&quot;&gt;&lt;a href=&quot;#RSS订阅是什么&quot; class=&quot;headerlink&quot; title=&quot;RSS订阅是什么&quot;&gt;&lt;/a&gt;RSS订阅是什么&lt;/h2&gt;&lt;p&gt;RSS订阅是古老的东西&lt;/p&gt;
</summary>
      
    
    
    
    <category term="蒸汽机" scheme="https://tobenot.github.io/categories/%E8%92%B8%E6%B1%BD%E6%9C%BA/"/>
    
    
    <category term="技术" scheme="https://tobenot.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
    <category term="完整" scheme="https://tobenot.github.io/tags/%E5%AE%8C%E6%95%B4/"/>
    
    <category term="before69" scheme="https://tobenot.github.io/tags/before69/"/>
    
    <category term="article" scheme="https://tobenot.github.io/tags/article/"/>
    
  </entry>
  
</feed>
